import { MutableRefObject, RefObject } from 'react';
import { FunnelType } from '../interfaces';
export type FunnelState = 'default' | 'validating' | 'complete' | 'cancelled';
export interface FunnelContextValue {
    funnelInteractionId: string | undefined;
    funnelType: FunnelType;
    optionalStepNumbers: number[];
    totalFunnelSteps: number;
    funnelSubmit: () => void;
    funnelCancel: () => void;
    setFunnelInteractionId: (funnelInteractionId: string) => void;
    submissionAttempt: number;
    funnelNextOrSubmitAttempt: () => void;
    funnelState: RefObject<FunnelState>;
    errorCount: MutableRefObject<number>;
    loadingButtonCount: MutableRefObject<number>;
}
export interface FunnelStepContextValue {
    stepNameSelector: string;
    stepNumber: number;
    funnelStepProps?: Record<string, string | number | boolean | undefined>;
}
export interface FunnelSubStepContextValue {
    subStepId: string;
    subStepSelector: string;
    subStepNameSelector: string;
    subStepRef: MutableRefObject<HTMLDivElement | null>;
    isNestedSubStep: boolean;
    funnelSubStepProps?: Record<string, string | number | boolean | undefined>;
}
export declare const FunnelContext: import("react").Context<FunnelContextValue>;
export declare const FunnelStepContext: import("react").Context<FunnelStepContextValue>;
export declare const FunnelSubStepContext: import("react").Context<FunnelSubStepContextValue>;
//# sourceMappingURL=analytics-context.d.ts.map