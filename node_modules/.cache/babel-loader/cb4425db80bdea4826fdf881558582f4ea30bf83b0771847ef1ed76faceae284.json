{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport balanced from 'balanced-match';\nimport { calculateOnce } from './calculate-once';\nexport function findUpUntil(node, callback) {\n  let current = node;\n  while (current && !callback(current)) {\n    current = current.parentElement;\n    // If a component is used within an svg (i.e. as foreignObject), then it will\n    // have some ancestor nodes that are SVGElement. We want to skip those,\n    // as they have very different properties to HTMLElements.\n    while (current && !(current instanceof HTMLElement)) {\n      current = current.parentElement;\n    }\n  }\n  return current;\n}\n/**\n * Returns whether the browser supports CSS position sticky.\n * In our list of supported browsers, only returns false for IE11.\n */\nexport function supportsStickyPosition() {\n  var _a, _b, _c;\n  if (typeof window === 'undefined') {\n    // render no-sticky UI on server-side\n    return false;\n  }\n  return (_c = (_b = (_a = window.CSS) === null || _a === void 0 ? void 0 : _a.supports) === null || _b === void 0 ? void 0 : _b.call(_a, 'position', 'sticky')) !== null && _c !== void 0 ? _c : false;\n}\n/**\n * Returns whether `position: fixed` can be relative to transformed parents or\n * whether it's always relative to the viewport. Returns `true` on all browsers\n * except IE.\n */\nconst supportsContainingBlockPositioning = calculateOnce(() => {\n  const parent = document.createElement('div');\n  parent.style.transform = 'translateY(5px)';\n  document.body.appendChild(parent);\n  const child = document.createElement('div');\n  child.style.position = 'fixed';\n  child.style.top = '0';\n  parent.appendChild(child);\n  const result = parent.getBoundingClientRect().top === child.getBoundingClientRect().top;\n  document.body.removeChild(parent);\n  return result;\n});\n/**\n * Returns an element that is used to position the given element.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block\n */\nexport function getContainingBlock(startElement) {\n  if (!startElement.parentElement) {\n    return null;\n  }\n  return supportsContainingBlockPositioning() ? findUpUntil(startElement.parentElement, element => {\n    const computedStyle = getComputedStyle(element);\n    return !!computedStyle.transform && computedStyle.transform !== 'none' || !!computedStyle.perspective && computedStyle.perspective !== 'none';\n  }) : null;\n}\nconst cssVariableExpression = /--.+?\\s*,\\s*(.+)/;\n/**\n * Parses a CSS color value that might contain CSS Custom Properties\n * and returns a value that will be understood by the browser, no matter of support level.\n * If the browser support CSS Custom Properties, the value will be return as is. Otherwise,\n * the fallback value will be extracted and returned instead.\n */\nexport function parseCssVariable(value) {\n  var _a, _b, _c;\n  if ((_c = (_b = (_a = window.CSS) === null || _a === void 0 ? void 0 : _a.supports) === null || _b === void 0 ? void 0 : _b.call(_a, 'color', 'var(--dummy, #000)')) !== null && _c !== void 0 ? _c : false) {\n    return value;\n  }\n  const varIndex = value.lastIndexOf('var(');\n  if (varIndex === -1) {\n    return value;\n  }\n  const expr = balanced('(', ')', value.substr(varIndex));\n  if (!expr) {\n    return value;\n  }\n  const match = expr.body.match(cssVariableExpression);\n  return match ? match[1] : value;\n}\n/**\n * Checks whether the given node is a parent of the other descendant node.\n * This utility is helpful when the parent might be an SVG element,\n * which doesn't have a native `contains` implementation on some browsers like IE11.\n * @param parent Parent node\n * @param descendant Node that is checked to be a descendant of the parent node\n */\nexport function nodeContains(parent, descendant) {\n  if (!parent || !descendant) {\n    return false;\n  }\n  // Use the native `contains` method when available\n  if (parent.contains && descendant.nodeType === Node.ELEMENT_NODE) {\n    return parent === descendant || parent.contains(descendant);\n  }\n  // Fall back to a simple upwards tree traversal\n  let upperNode = descendant;\n  while (upperNode && parent !== upperNode) {\n    upperNode = upperNode.parentNode;\n  }\n  return upperNode === parent;\n}\n/**\n * Checks whether the given node is a descendant of a container.\n * @param container Container node\n * @param node Node that is checked to be a descendant of the container\n */\nexport function containsOrEqual(container, node) {\n  if (container === null) {\n    return false;\n  }\n  return container === node || container.contains(node);\n}","map":{"version":3,"names":["balanced","calculateOnce","findUpUntil","node","callback","current","parentElement","HTMLElement","supportsStickyPosition","window","_c","_b","_a","CSS","supports","call","supportsContainingBlockPositioning","parent","document","createElement","style","transform","body","appendChild","child","position","top","result","getBoundingClientRect","removeChild","getContainingBlock","startElement","element","computedStyle","getComputedStyle","perspective","cssVariableExpression","parseCssVariable","value","varIndex","lastIndexOf","expr","substr","match","nodeContains","descendant","contains","nodeType","Node","ELEMENT_NODE","upperNode","parentNode","containsOrEqual","container"],"sources":["/Users/nelaurar/Desktop/proj /my-app/node_modules/@cloudscape-design/components/internal/utils/lib/default/internal/utils/dom.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport balanced from 'balanced-match';\nimport { calculateOnce } from './calculate-once';\n\nexport function findUpUntil(node: HTMLElement, callback: (element: HTMLElement) => boolean): HTMLElement | null {\n  let current: HTMLElement | null = node;\n  while (current && !callback(current)) {\n    current = current.parentElement;\n    // If a component is used within an svg (i.e. as foreignObject), then it will\n    // have some ancestor nodes that are SVGElement. We want to skip those,\n    // as they have very different properties to HTMLElements.\n    while (current && !(current instanceof HTMLElement)) {\n      current = (current as Element).parentElement;\n    }\n  }\n  return current;\n}\n\n/**\n * Returns whether the browser supports CSS position sticky.\n * In our list of supported browsers, only returns false for IE11.\n */\nexport function supportsStickyPosition() {\n  if (typeof window === 'undefined') {\n    // render no-sticky UI on server-side\n    return false;\n  }\n  return window.CSS?.supports?.('position', 'sticky') ?? false;\n}\n\n/**\n * Returns whether `position: fixed` can be relative to transformed parents or\n * whether it's always relative to the viewport. Returns `true` on all browsers\n * except IE.\n */\nconst supportsContainingBlockPositioning = calculateOnce(() => {\n  const parent = document.createElement('div');\n  parent.style.transform = 'translateY(5px)';\n  document.body.appendChild(parent);\n\n  const child = document.createElement('div');\n  child.style.position = 'fixed';\n  child.style.top = '0';\n  parent.appendChild(child);\n\n  const result = parent.getBoundingClientRect().top === child.getBoundingClientRect().top;\n  document.body.removeChild(parent);\n  return result;\n});\n\n/**\n * Returns an element that is used to position the given element.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block\n */\nexport function getContainingBlock(startElement: HTMLElement): HTMLElement | null {\n  if (!startElement.parentElement) {\n    return null;\n  }\n\n  return supportsContainingBlockPositioning()\n    ? (findUpUntil(startElement.parentElement, element => {\n        const computedStyle = getComputedStyle(element);\n        return (\n          (!!computedStyle.transform && computedStyle.transform !== 'none') ||\n          (!!computedStyle.perspective && computedStyle.perspective !== 'none')\n        );\n      }) as HTMLElement)\n    : null;\n}\n\nconst cssVariableExpression = /--.+?\\s*,\\s*(.+)/;\n\n/**\n * Parses a CSS color value that might contain CSS Custom Properties\n * and returns a value that will be understood by the browser, no matter of support level.\n * If the browser support CSS Custom Properties, the value will be return as is. Otherwise,\n * the fallback value will be extracted and returned instead.\n */\nexport function parseCssVariable(value: string) {\n  if (window.CSS?.supports?.('color', 'var(--dummy, #000)') ?? false) {\n    return value;\n  }\n\n  const varIndex = value.lastIndexOf('var(');\n  if (varIndex === -1) {\n    return value;\n  }\n\n  const expr = balanced('(', ')', value.substr(varIndex));\n  if (!expr) {\n    return value;\n  }\n\n  const match = expr.body.match(cssVariableExpression);\n  return match ? match[1] : value;\n}\n\n/**\n * Checks whether the given node is a parent of the other descendant node.\n * This utility is helpful when the parent might be an SVG element,\n * which doesn't have a native `contains` implementation on some browsers like IE11.\n * @param parent Parent node\n * @param descendant Node that is checked to be a descendant of the parent node\n */\nexport function nodeContains(parent: Node | null, descendant: Node | null) {\n  if (!parent || !descendant) {\n    return false;\n  }\n\n  // Use the native `contains` method when available\n  if (parent.contains && descendant.nodeType === Node.ELEMENT_NODE) {\n    return parent === descendant || parent.contains(descendant);\n  }\n\n  // Fall back to a simple upwards tree traversal\n  let upperNode: Node | null = descendant;\n  while (upperNode && parent !== upperNode) {\n    upperNode = upperNode.parentNode;\n  }\n  return upperNode === parent;\n}\n\n/**\n * Checks whether the given node is a descendant of a container.\n * @param container Container node\n * @param node Node that is checked to be a descendant of the container\n */\nexport function containsOrEqual(container: Node | null, node: Node): boolean {\n  if (container === null) {\n    return false;\n  }\n  return container === node || container.contains(node);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}