{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __rest } from \"tslib\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport InternalButton from '../../button/internal';\nimport styles from './styles.css.js';\nimport { useFormFieldContext } from '../../contexts/form-field';\nimport { useUniqueId } from '../../internal/hooks/use-unique-id';\nimport { joinStrings } from '../../internal/utils/strings';\nimport ScreenreaderOnly from '../../internal/components/screenreader-only';\nimport useForwardFocus from '../../internal/hooks/forward-focus';\nimport clsx from 'clsx';\nexport default React.forwardRef(FileInput);\nfunction FileInput(_a, ref) {\n  var _b;\n  var {\n      accept,\n      ariaRequired,\n      multiple,\n      value,\n      onChange,\n      children\n    } = _a,\n    restProps = __rest(_a, [\"accept\", \"ariaRequired\", \"multiple\", \"value\", \"onChange\", \"children\"]);\n  const uploadInputRef = useRef(null);\n  const uploadButtonLabelId = useUniqueId('upload-button-label');\n  const formFieldContext = useFormFieldContext(restProps);\n  const selfControlId = useUniqueId('upload-input');\n  const controlId = (_b = formFieldContext.controlId) !== null && _b !== void 0 ? _b : selfControlId;\n  useForwardFocus(ref, uploadInputRef);\n  const [isFocused, setIsFocused] = useState(false);\n  const onUploadButtonClick = () => {\n    var _a;\n    return (_a = uploadInputRef.current) === null || _a === void 0 ? void 0 : _a.click();\n  };\n  const onUploadInputFocus = () => setIsFocused(true);\n  const onUploadInputBlur = () => setIsFocused(false);\n  const onUploadInputChange = _ref => {\n    let {\n      target\n    } = _ref;\n    onChange(target.files ? Array.from(target.files) : []);\n  };\n  const nativeAttributes = {\n    'aria-labelledby': joinStrings(formFieldContext.ariaLabelledby, uploadButtonLabelId),\n    'aria-describedby': formFieldContext.ariaDescribedby\n  };\n  if (formFieldContext.invalid) {\n    nativeAttributes['aria-invalid'] = true;\n  }\n  if (ariaRequired) {\n    nativeAttributes['aria-required'] = true;\n  }\n  // Synchronizing component's value with the native file input state.\n  useEffect(() => {\n    // The DataTransfer is not available in jsdom.\n    if (window.DataTransfer) {\n      const dataTransfer = new DataTransfer();\n      for (const file of value) {\n        dataTransfer.items.add(file);\n      }\n      uploadInputRef.current.files = dataTransfer.files;\n    }\n  }, [value]);\n  return React.createElement(\"div\", {\n    className: styles['file-input-container']\n  }, React.createElement(\"input\", Object.assign({\n    id: controlId,\n    ref: uploadInputRef,\n    type: \"file\",\n    hidden: false,\n    multiple: multiple,\n    accept: accept,\n    onChange: onUploadInputChange,\n    onFocus: onUploadInputFocus,\n    onBlur: onUploadInputBlur,\n    className: styles['upload-input']\n  }, nativeAttributes)), React.createElement(InternalButton, {\n    iconName: \"upload\",\n    formAction: \"none\",\n    onClick: onUploadButtonClick,\n    className: clsx(styles['upload-button'], isFocused && styles['force-focus-outline']),\n    __nativeAttributes: {\n      tabIndex: -1,\n      'aria-hidden': true\n    }\n  }, children), React.createElement(ScreenreaderOnly, {\n    id: uploadButtonLabelId\n  }, children));\n}","map":{"version":3,"names":["React","useEffect","useRef","useState","InternalButton","styles","useFormFieldContext","useUniqueId","joinStrings","ScreenreaderOnly","useForwardFocus","clsx","forwardRef","FileInput","_a","ref","accept","ariaRequired","multiple","value","onChange","children","restProps","__rest","uploadInputRef","uploadButtonLabelId","formFieldContext","selfControlId","controlId","_b","isFocused","setIsFocused","onUploadButtonClick","current","click","onUploadInputFocus","onUploadInputBlur","onUploadInputChange","_ref","target","files","Array","from","nativeAttributes","ariaLabelledby","ariaDescribedby","invalid","window","DataTransfer","dataTransfer","file","items","add","createElement","className","Object","assign","id","type","hidden","onFocus","onBlur","iconName","formAction","onClick","__nativeAttributes","tabIndex"],"sources":["/Users/nathanwang/Downloads/aws_project/face2alias_aws/node_modules/@cloudscape-design/components/file-upload/file-input/lib/default/file-upload/file-input/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { ChangeEvent, ForwardedRef, useEffect, useRef, useState } from 'react';\n\nimport InternalButton from '../../button/internal';\nimport styles from './styles.css.js';\nimport { useFormFieldContext } from '../../contexts/form-field';\nimport { useUniqueId } from '../../internal/hooks/use-unique-id';\nimport { FormFieldValidationControlProps } from '../../internal/context/form-field-context';\nimport { joinStrings } from '../../internal/utils/strings';\nimport ScreenreaderOnly from '../../internal/components/screenreader-only';\nimport { FileUploadProps } from '../interfaces';\nimport useForwardFocus from '../../internal/hooks/forward-focus';\nimport clsx from 'clsx';\n\ninterface FileInputProps extends FormFieldValidationControlProps {\n  accept?: string;\n  ariaRequired?: boolean;\n  multiple: boolean;\n  value: readonly File[];\n  onChange: (files: File[]) => void;\n  children: React.ReactNode;\n}\n\nexport default React.forwardRef(FileInput);\n\nfunction FileInput(\n  { accept, ariaRequired, multiple, value, onChange, children, ...restProps }: FileInputProps,\n  ref: ForwardedRef<FileUploadProps.Ref>\n) {\n  const uploadInputRef = useRef<HTMLInputElement>(null);\n  const uploadButtonLabelId = useUniqueId('upload-button-label');\n  const formFieldContext = useFormFieldContext(restProps);\n  const selfControlId = useUniqueId('upload-input');\n  const controlId = formFieldContext.controlId ?? selfControlId;\n\n  useForwardFocus(ref, uploadInputRef);\n\n  const [isFocused, setIsFocused] = useState(false);\n\n  const onUploadButtonClick = () => uploadInputRef.current?.click();\n\n  const onUploadInputFocus = () => setIsFocused(true);\n\n  const onUploadInputBlur = () => setIsFocused(false);\n\n  const onUploadInputChange = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    onChange(target.files ? Array.from(target.files) : []);\n  };\n\n  const nativeAttributes: Record<string, any> = {\n    'aria-labelledby': joinStrings(formFieldContext.ariaLabelledby, uploadButtonLabelId),\n    'aria-describedby': formFieldContext.ariaDescribedby,\n  };\n  if (formFieldContext.invalid) {\n    nativeAttributes['aria-invalid'] = true;\n  }\n  if (ariaRequired) {\n    nativeAttributes['aria-required'] = true;\n  }\n\n  // Synchronizing component's value with the native file input state.\n  useEffect(() => {\n    // The DataTransfer is not available in jsdom.\n    if (window.DataTransfer) {\n      const dataTransfer = new DataTransfer();\n      for (const file of value) {\n        dataTransfer.items.add(file);\n      }\n      uploadInputRef.current!.files = dataTransfer.files;\n    }\n  }, [value]);\n\n  return (\n    <div className={styles['file-input-container']}>\n      {/* This is the actual interactive and accessible file-upload element. */}\n      {/* It is visually hidden to achieve the desired UX design. */}\n      <input\n        id={controlId}\n        ref={uploadInputRef}\n        type=\"file\"\n        hidden={false}\n        multiple={multiple}\n        accept={accept}\n        onChange={onUploadInputChange}\n        onFocus={onUploadInputFocus}\n        onBlur={onUploadInputBlur}\n        className={styles['upload-input']}\n        {...nativeAttributes}\n      />\n\n      {/* The button is decorative. It dispatches clicks to the file input and is ARIA-hidden. */}\n      {/* When the input is focused the focus outline is forced on the button. */}\n      <InternalButton\n        iconName=\"upload\"\n        formAction=\"none\"\n        onClick={onUploadButtonClick}\n        className={clsx(styles['upload-button'], isFocused && styles['force-focus-outline'])}\n        __nativeAttributes={{ tabIndex: -1, 'aria-hidden': true }}\n      >\n        {children}\n      </InternalButton>\n\n      {/* The file input needs to be labelled with provided content. Can't use the button because it is ARIA-hidden. */}\n      <ScreenreaderOnly id={uploadButtonLabelId}>{children}</ScreenreaderOnly>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}