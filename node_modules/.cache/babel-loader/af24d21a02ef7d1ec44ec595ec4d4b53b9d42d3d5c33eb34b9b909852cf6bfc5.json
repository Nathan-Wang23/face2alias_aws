{"ast":null,"code":"var _jsxFileName = \"/Users/nelaurar/Desktop/proj /my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\n\n// add from the LogRocket\nimport React, { useEffect, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\n//\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App(props) {\n  _s();\n  {/* <header className=\"App-header\">\n    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    <p>\n      Edit <code>src/App.js</code> and save to reload.\n    </p>\n    <a\n      className=\"App-link\"\n      href=\"https://reactjs.org\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      Learn React\n    </a>\n   </header> */}\n  const [files, setFiles] = useState([]);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: 'image/*',\n    onDrop: acceptedFiles => {\n      setFiles(acceptedFiles.map(file => Object.assign(file, {\n        preview: URL.createObjectURL(file)\n      })));\n    }\n  });\n  const thumbs = files.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: thumb,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: thumbInner,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: file.preview,\n        style: img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this)\n  }, file.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this));\n  useEffect(() => {\n    // Make sure to revoke the data uris to avoid memory leaks\n    files.forEach(file => URL.revokeObjectURL(file.preview));\n  }, [files]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ...getRootProps({\n        className: 'dropzone'\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag 'n' drop some files here, or click to select files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      style: thumbsContainer,\n      children: thumbs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"HtUHmGo3hwDZKSmIKg3riAANKQ4=\", false, function () {\n  return [useDropzone];\n});\n_c = App;\nexport default App;\n\n// From the website - https://blog.logrocket.com/create-drag-and-drop-component-react-dropzone/\n// function App(props) {\n//   const [files, setFiles] = useState([]);\n//   const {getRootProps, getInputProps} = useDropzone({\n//     accept: 'image/*',\n//     onDrop: acceptedFiles => {\n//       setFiles(acceptedFiles.map(file => Object.assign(file, {\n//         preview: URL.createObjectURL(file)\n//       })));\n//     }\n//   });\n\n//   const thumbs = files.map(file => (\n//     <div style={thumb} key={file.name}>\n//       <div style={thumbInner}>\n//         <img\n//           src={file.preview}\n//           style={img}\n//         />\n//       </div>\n//     </div>\n//   ));\n\n//   useEffect(() => {\n//     // Make sure to revoke the data uris to avoid memory leaks\n//     files.forEach(file => URL.revokeObjectURL(file.preview));\n//   }, [files]);\n\n//   return (\n//     <section className=\"container\">\n//       <div {...getRootProps({className: 'dropzone'})}>\n//         <input {...getInputProps()} />\n//         <p>Drag 'n' drop some files here, or click to select files</p>\n//       </div>\n//       <aside style={thumbsContainer}>\n//         {thumbs}\n//       </aside>\n//     </section>\n//   );\n\n// }\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","useEffect","useState","useDropzone","jsxDEV","_jsxDEV","App","props","_s","files","setFiles","getRootProps","getInputProps","accept","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","thumbs","style","thumb","children","thumbInner","src","img","fileName","_jsxFileName","lineNumber","columnNumber","name","forEach","revokeObjectURL","className","thumbsContainer","_c","$RefreshReg$"],"sources":["/Users/nelaurar/Desktop/proj /my-app/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\n// add from the LogRocket\nimport React, {useEffect, useState} from 'react';\nimport {useDropzone} from 'react-dropzone';\n//\n\n\nfunction App(props) {\n  \n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n      const [files, setFiles] = useState([]);\n      const {getRootProps, getInputProps} = useDropzone({\n        accept: 'image/*',\n        onDrop: acceptedFiles => {\n          setFiles(acceptedFiles.map(file => Object.assign(file, {\n            preview: URL.createObjectURL(file)\n          })));\n        }\n      });\n    \n      const thumbs = files.map(file => (\n        <div style={thumb} key={file.name}>\n          <div style={thumbInner}>\n            <img\n              src={file.preview}\n              style={img}\n            />\n          </div>\n        </div>\n      ));\n    \n      useEffect(() => {\n        // Make sure to revoke the data uris to avoid memory leaks\n        files.forEach(file => URL.revokeObjectURL(file.preview));\n      }, [files]);\n    \n      return (\n        <section className=\"container\">\n          <div {...getRootProps({className: 'dropzone'})}>\n            <input {...getInputProps()} />\n            <p>Drag 'n' drop some files here, or click to select files</p>\n          </div>\n          <aside style={thumbsContainer}>\n            {thumbs}\n          </aside>\n        </section>\n      );\n}\n\nexport default App;\n\n\n\n// From the website - https://blog.logrocket.com/create-drag-and-drop-component-react-dropzone/\n// function App(props) {\n//   const [files, setFiles] = useState([]);\n//   const {getRootProps, getInputProps} = useDropzone({\n//     accept: 'image/*',\n//     onDrop: acceptedFiles => {\n//       setFiles(acceptedFiles.map(file => Object.assign(file, {\n//         preview: URL.createObjectURL(file)\n//       })));\n//     }\n//   });\n\n//   const thumbs = files.map(file => (\n//     <div style={thumb} key={file.name}>\n//       <div style={thumbInner}>\n//         <img\n//           src={file.preview}\n//           style={img}\n//         />\n//       </div>\n//     </div>\n//   ));\n\n//   useEffect(() => {\n//     // Make sure to revoke the data uris to avoid memory leaks\n//     files.forEach(file => URL.revokeObjectURL(file.preview));\n//   }, [files]);\n\n//   return (\n//     <section className=\"container\">\n//       <div {...getRootProps({className: 'dropzone'})}>\n//         <input {...getInputProps()} />\n//         <p>Drag 'n' drop some files here, or click to select files</p>\n//       </div>\n//       <aside style={thumbsContainer}>\n//         {thumbs}\n//       </aside>\n//     </section>\n//   );\n    \n// }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}