{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect } from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport InternalIcon from '../../icon/internal';\nimport ItemsList from '../items-list';\nimport MobileExpandableGroup from '../mobile-expandable-group/mobile-expandable-group';\nimport Tooltip from '../tooltip.js';\nimport useHiddenDescription from '../utils/use-hidden-description.js';\nimport { getMenuItemProps } from '../utils/menu-item.js';\nconst MobileExpandableCategoryElement = _ref => {\n  let {\n    item,\n    onItemActivate,\n    onGroupToggle,\n    targetItem,\n    isHighlighted,\n    isKeyboardHighlight,\n    isExpanded,\n    highlightItem,\n    disabled,\n    variant\n  } = _ref;\n  const highlighted = isHighlighted(item);\n  const expanded = isExpanded(item);\n  const isKeyboardHighlighted = isKeyboardHighlight(item);\n  const triggerRef = React.useRef(null);\n  useEffect(() => {\n    if (triggerRef.current && highlighted && !expanded) {\n      triggerRef.current.focus();\n    }\n  }, [expanded, highlighted]);\n  const onClick = e => {\n    if (!disabled) {\n      e.preventDefault();\n      onGroupToggle(item, e);\n    }\n  };\n  const onHover = event => {\n    event.preventDefault();\n    highlightItem(item);\n  };\n  const isDisabledWithReason = !!item.disabledReason && item.disabled;\n  const {\n    targetProps,\n    descriptionEl\n  } = useHiddenDescription(item.disabledReason);\n  const trigger = item.text && React.createElement(\"span\", Object.assign({\n    className: clsx(styles.header, styles['expandable-header'], styles[`variant-${variant}`], {\n      [styles.highlighted]: highlighted,\n      [styles['rolled-down']]: expanded,\n      [styles.disabled]: disabled,\n      [styles['is-focused']]: isKeyboardHighlighted\n    }),\n    // We are using the roving tabindex technique to manage the focus state of the dropdown.\n    // The current element will always have tabindex=0 which means that it can be tabbed to,\n    // while all other items have tabindex=-1 so we can focus them when necessary.\n    tabIndex: highlighted ? 0 : -1,\n    ref: triggerRef\n  }, getMenuItemProps({\n    parent: true,\n    disabled,\n    expanded\n  }), isDisabledWithReason ? targetProps : {}), item.text, React.createElement(\"span\", {\n    className: clsx(styles['expand-icon'], {\n      [styles['expand-icon-up']]: expanded\n    })\n  }, React.createElement(InternalIcon, {\n    name: \"caret-down-filled\"\n  })));\n  let content;\n  if (isDisabledWithReason) {\n    content = React.createElement(React.Fragment, null, descriptionEl, React.createElement(Tooltip, {\n      content: item.disabledReason\n    }, trigger));\n  } else if (disabled) {\n    content = trigger;\n  } else {\n    content = React.createElement(MobileExpandableGroup, {\n      open: expanded,\n      trigger: trigger\n    }, item.items && expanded && React.createElement(\"ul\", {\n      role: \"menu\",\n      \"aria-label\": item.text,\n      className: clsx(styles['items-list-container'])\n    }, React.createElement(ItemsList, {\n      items: item.items,\n      onItemActivate: onItemActivate,\n      onGroupToggle: onGroupToggle,\n      targetItem: targetItem,\n      isHighlighted: isHighlighted,\n      isKeyboardHighlight: isKeyboardHighlight,\n      isExpanded: isExpanded,\n      highlightItem: highlightItem,\n      hasCategoryHeader: true,\n      variant: variant\n    })));\n  }\n  return React.createElement(\"li\", {\n    className: clsx(styles.category, styles[`variant-${variant}`], styles.expandable, {\n      [styles.expanded]: expanded,\n      [styles.disabled]: disabled,\n      [styles.highlighted]: highlighted || expanded,\n      [styles.expandable]: true\n    }),\n    role: \"presentation\",\n    onClick: onClick,\n    onMouseEnter: onHover,\n    onTouchStart: onHover,\n    \"data-testid\": item.id\n  }, content);\n};\nexport default MobileExpandableCategoryElement;","map":{"version":3,"names":["React","useEffect","clsx","styles","InternalIcon","ItemsList","MobileExpandableGroup","Tooltip","useHiddenDescription","getMenuItemProps","MobileExpandableCategoryElement","_ref","item","onItemActivate","onGroupToggle","targetItem","isHighlighted","isKeyboardHighlight","isExpanded","highlightItem","disabled","variant","highlighted","expanded","isKeyboardHighlighted","triggerRef","useRef","current","focus","onClick","e","preventDefault","onHover","event","isDisabledWithReason","disabledReason","targetProps","descriptionEl","trigger","text","createElement","Object","assign","className","header","tabIndex","ref","parent","name","content","Fragment","open","items","role","hasCategoryHeader","category","expandable","onMouseEnter","onTouchStart","id"],"sources":["/Users/nathanwang/Downloads/aws_project/face2alias_aws/node_modules/@cloudscape-design/components/button-dropdown/category-elements/lib/default/button-dropdown/category-elements/mobile-expandable-category-element.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect } from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\n\nimport InternalIcon from '../../icon/internal';\nimport ItemsList from '../items-list';\nimport MobileExpandableGroup from '../mobile-expandable-group/mobile-expandable-group';\nimport { CategoryProps } from '../interfaces';\nimport Tooltip from '../tooltip.js';\nimport useHiddenDescription from '../utils/use-hidden-description.js';\nimport { getMenuItemProps } from '../utils/menu-item.js';\n\nconst MobileExpandableCategoryElement = ({\n  item,\n  onItemActivate,\n  onGroupToggle,\n  targetItem,\n  isHighlighted,\n  isKeyboardHighlight,\n  isExpanded,\n  highlightItem,\n  disabled,\n  variant,\n}: CategoryProps) => {\n  const highlighted = isHighlighted(item);\n  const expanded = isExpanded(item);\n  const isKeyboardHighlighted = isKeyboardHighlight(item);\n  const triggerRef = React.useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    if (triggerRef.current && highlighted && !expanded) {\n      triggerRef.current.focus();\n    }\n  }, [expanded, highlighted]);\n\n  const onClick = (e: React.MouseEvent) => {\n    if (!disabled) {\n      e.preventDefault();\n      onGroupToggle(item, e);\n    }\n  };\n\n  const onHover = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    highlightItem(item);\n  };\n\n  const isDisabledWithReason = !!item.disabledReason && item.disabled;\n  const { targetProps, descriptionEl } = useHiddenDescription(item.disabledReason);\n  const trigger = item.text && (\n    <span\n      className={clsx(styles.header, styles['expandable-header'], styles[`variant-${variant}`], {\n        [styles.highlighted]: highlighted,\n        [styles['rolled-down']]: expanded,\n        [styles.disabled]: disabled,\n        [styles['is-focused']]: isKeyboardHighlighted,\n      })}\n      // We are using the roving tabindex technique to manage the focus state of the dropdown.\n      // The current element will always have tabindex=0 which means that it can be tabbed to,\n      // while all other items have tabindex=-1 so we can focus them when necessary.\n      tabIndex={highlighted ? 0 : -1}\n      ref={triggerRef}\n      {...getMenuItemProps({ parent: true, disabled, expanded })}\n      {...(isDisabledWithReason ? targetProps : {})}\n    >\n      {item.text}\n      <span\n        className={clsx(styles['expand-icon'], {\n          [styles['expand-icon-up']]: expanded,\n        })}\n      >\n        <InternalIcon name=\"caret-down-filled\" />\n      </span>\n    </span>\n  );\n\n  let content: React.ReactNode;\n\n  if (isDisabledWithReason) {\n    content = (\n      <>\n        {descriptionEl}\n        <Tooltip content={item.disabledReason}>{trigger}</Tooltip>\n      </>\n    );\n  } else if (disabled) {\n    content = trigger;\n  } else {\n    content = (\n      <MobileExpandableGroup open={expanded} trigger={trigger}>\n        {item.items && expanded && (\n          <ul role=\"menu\" aria-label={item.text} className={clsx(styles['items-list-container'])}>\n            <ItemsList\n              items={item.items}\n              onItemActivate={onItemActivate}\n              onGroupToggle={onGroupToggle}\n              targetItem={targetItem}\n              isHighlighted={isHighlighted}\n              isKeyboardHighlight={isKeyboardHighlight}\n              isExpanded={isExpanded}\n              highlightItem={highlightItem}\n              hasCategoryHeader={true}\n              variant={variant}\n            />\n          </ul>\n        )}\n      </MobileExpandableGroup>\n    );\n  }\n\n  return (\n    <li\n      className={clsx(styles.category, styles[`variant-${variant}`], styles.expandable, {\n        [styles.expanded]: expanded,\n        [styles.disabled]: disabled,\n        [styles.highlighted]: highlighted || expanded,\n        [styles.expandable]: true,\n      })}\n      role=\"presentation\"\n      onClick={onClick}\n      onMouseEnter={onHover}\n      onTouchStart={onHover}\n      data-testid={item.id}\n    >\n      {content}\n    </li>\n  );\n};\n\nexport default MobileExpandableCategoryElement;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}