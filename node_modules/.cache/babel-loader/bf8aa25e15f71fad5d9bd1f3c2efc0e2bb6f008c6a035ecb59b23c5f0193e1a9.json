{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Checks whether the given node is a parent of the other descendant node.\n * This utility is helpful when the parent might be an SVG element,\n * which doesn't have a native `contains` implementation on some browsers like IE11.\n * @param parent Parent node\n * @param descendant Node that is checked to be a descendant of the parent node\n */\nexport default function nodeContains(parent, descendant) {\n  if (!parent || !descendant) {\n    return false;\n  }\n  // Use the native `contains` method when available\n  if (parent.contains && descendant.nodeType === Node.ELEMENT_NODE) {\n    return parent === descendant || parent.contains(descendant);\n  }\n  // Fall back to a simple upwards tree traversal\n  var upperNode = descendant;\n  while (upperNode && parent !== upperNode) {\n    upperNode = upperNode.parentNode;\n  }\n  return upperNode === parent;\n}","map":{"version":3,"names":["nodeContains","parent","descendant","contains","nodeType","Node","ELEMENT_NODE","upperNode","parentNode"],"sources":["/Users/nelaurar/Desktop/proj /my-app/node_modules/@cloudscape-design/component-toolkit/lib/dom/node-contains.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Checks whether the given node is a parent of the other descendant node.\n * This utility is helpful when the parent might be an SVG element,\n * which doesn't have a native `contains` implementation on some browsers like IE11.\n * @param parent Parent node\n * @param descendant Node that is checked to be a descendant of the parent node\n */\nexport default function nodeContains(parent, descendant) {\n    if (!parent || !descendant) {\n        return false;\n    }\n    // Use the native `contains` method when available\n    if (parent.contains && descendant.nodeType === Node.ELEMENT_NODE) {\n        return parent === descendant || parent.contains(descendant);\n    }\n    // Fall back to a simple upwards tree traversal\n    var upperNode = descendant;\n    while (upperNode && parent !== upperNode) {\n        upperNode = upperNode.parentNode;\n    }\n    return upperNode === parent;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,YAAYA,CAACC,MAAM,EAAEC,UAAU,EAAE;EACrD,IAAI,CAACD,MAAM,IAAI,CAACC,UAAU,EAAE;IACxB,OAAO,KAAK;EAChB;EACA;EACA,IAAID,MAAM,CAACE,QAAQ,IAAID,UAAU,CAACE,QAAQ,KAAKC,IAAI,CAACC,YAAY,EAAE;IAC9D,OAAOL,MAAM,KAAKC,UAAU,IAAID,MAAM,CAACE,QAAQ,CAACD,UAAU,CAAC;EAC/D;EACA;EACA,IAAIK,SAAS,GAAGL,UAAU;EAC1B,OAAOK,SAAS,IAAIN,MAAM,KAAKM,SAAS,EAAE;IACtCA,SAAS,GAAGA,SAAS,CAACC,UAAU;EACpC;EACA,OAAOD,SAAS,KAAKN,MAAM;AAC/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}