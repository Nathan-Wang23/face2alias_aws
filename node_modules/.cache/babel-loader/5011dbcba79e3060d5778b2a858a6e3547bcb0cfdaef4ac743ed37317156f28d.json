{"ast":null,"code":"import { __rest } from \"tslib\";\nimport { useOpenState } from '../../internal/components/options-list/utils/use-open-state';\nimport { fireCancelableEvent, isPlainLeftClick } from '../../internal/events';\nimport { KeyCode } from '../../internal/keycode';\nimport { getItemTarget, isItemGroup, isLinkItem } from './utils';\nimport useHighlightedMenu from './use-highlighted-menu';\nexport function useButtonDropdown(_ref) {\n  let {\n    items,\n    onItemClick,\n    onItemFollow,\n    onReturnFocus,\n    hasExpandableGroups,\n    isInRestrictedView = false,\n    expandToViewport = false\n  } = _ref;\n  const {\n    targetItem,\n    isHighlighted,\n    isKeyboardHighlight,\n    isExpanded,\n    highlightItem,\n    moveHighlight,\n    expandGroup,\n    collapseGroup,\n    reset,\n    setIsUsingMouse\n  } = useHighlightedMenu({\n    items,\n    hasExpandableGroups,\n    isInRestrictedView\n  });\n  const _a = useOpenState({\n      onClose: reset\n    }),\n    {\n      isOpen,\n      closeDropdown\n    } = _a,\n    openStateProps = __rest(_a, [\"isOpen\", \"closeDropdown\"]);\n  const toggleDropdown = function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var _a;\n    const moveHighlightOnOpen = (_a = options.moveHighlightOnOpen) !== null && _a !== void 0 ? _a : true;\n    if (!isOpen && moveHighlightOnOpen) {\n      moveHighlight(1);\n    }\n    openStateProps.toggleDropdown();\n  };\n  const onGroupToggle = item => !isExpanded(item) ? expandGroup(item) : collapseGroup();\n  const onItemActivate = (item, event) => {\n    const details = {\n      id: item.id || 'undefined',\n      href: item.href,\n      external: item.external,\n      target: getItemTarget(item)\n    };\n    if (onItemFollow && item.href && isPlainLeftClick(event)) {\n      fireCancelableEvent(onItemFollow, details, event);\n    }\n    if (onItemClick) {\n      fireCancelableEvent(onItemClick, details, event);\n    }\n    onReturnFocus();\n    closeDropdown();\n  };\n  const doVerticalNavigation = direction => {\n    if (isOpen) {\n      moveHighlight(direction);\n    }\n  };\n  const openAndSelectFirst = event => {\n    toggleDropdown();\n    event.preventDefault();\n  };\n  const actOnParentDropdown = event => {\n    // if there is no highlighted item we act on the trigger by opening or closing dropdown\n    if (!targetItem) {\n      if (isOpen && !isInRestrictedView) {\n        toggleDropdown();\n      } else {\n        openAndSelectFirst(event);\n      }\n    } else {\n      if (isItemGroup(targetItem)) {\n        onGroupToggle(targetItem, event);\n      } else {\n        onItemActivate(targetItem, event);\n      }\n    }\n  };\n  const activate = (event, isEnter) => {\n    setIsUsingMouse(false);\n    // if item is a link we rely on default behavior of an anchor, no need to prevent\n    if (targetItem && isLinkItem(targetItem) && isEnter) {\n      return;\n    }\n    event.preventDefault();\n    actOnParentDropdown(event);\n  };\n  const onKeyDown = event => {\n    setIsUsingMouse(false);\n    switch (event.keyCode) {\n      case KeyCode.down:\n        {\n          doVerticalNavigation(1);\n          event.preventDefault();\n          break;\n        }\n      case KeyCode.up:\n        {\n          doVerticalNavigation(-1);\n          event.preventDefault();\n          break;\n        }\n      case KeyCode.space:\n        {\n          // Prevent scrolling the list of items and highlighting the trigger\n          event.preventDefault();\n          break;\n        }\n      case KeyCode.enter:\n        {\n          if (!(targetItem === null || targetItem === void 0 ? void 0 : targetItem.disabled)) {\n            activate(event, true);\n          }\n          break;\n        }\n      case KeyCode.left:\n      case KeyCode.right:\n        {\n          if (targetItem && !targetItem.disabled && isItemGroup(targetItem) && !isExpanded(targetItem)) {\n            expandGroup();\n          } else if (hasExpandableGroups) {\n            collapseGroup();\n          }\n          event.preventDefault();\n          break;\n        }\n      case KeyCode.escape:\n        {\n          onReturnFocus();\n          closeDropdown();\n          event.preventDefault();\n          break;\n        }\n      case KeyCode.tab:\n        {\n          // When expanded to viewport the focus can't move naturally to the next element.\n          // Returning the focus to the trigger instead.\n          if (expandToViewport) {\n            onReturnFocus();\n          }\n          closeDropdown();\n          break;\n        }\n    }\n  };\n  const onKeyUp = event => {\n    // We need to handle activating items with Space separately because there is a bug\n    // in Firefox where changing the focus during a Space keydown event it will trigger\n    // unexpected click events on the new element: https://bugzilla.mozilla.org/show_bug.cgi?id=1220143\n    if (event.keyCode === KeyCode.space && !(targetItem === null || targetItem === void 0 ? void 0 : targetItem.disabled)) {\n      activate(event);\n    }\n  };\n  return {\n    isOpen,\n    targetItem,\n    isHighlighted,\n    isKeyboardHighlight,\n    isExpanded,\n    highlightItem,\n    onKeyDown,\n    onKeyUp,\n    onItemActivate,\n    onGroupToggle,\n    toggleDropdown,\n    closeDropdown,\n    setIsUsingMouse\n  };\n}","map":{"version":3,"names":["useOpenState","fireCancelableEvent","isPlainLeftClick","KeyCode","getItemTarget","isItemGroup","isLinkItem","useHighlightedMenu","useButtonDropdown","_ref","items","onItemClick","onItemFollow","onReturnFocus","hasExpandableGroups","isInRestrictedView","expandToViewport","targetItem","isHighlighted","isKeyboardHighlight","isExpanded","highlightItem","moveHighlight","expandGroup","collapseGroup","reset","setIsUsingMouse","_a","onClose","isOpen","closeDropdown","openStateProps","__rest","toggleDropdown","options","arguments","length","undefined","moveHighlightOnOpen","onGroupToggle","item","onItemActivate","event","details","id","href","external","target","doVerticalNavigation","direction","openAndSelectFirst","preventDefault","actOnParentDropdown","activate","isEnter","onKeyDown","keyCode","down","up","space","enter","disabled","left","right","escape","tab","onKeyUp"],"sources":["/Users/nathanwang/Downloads/aws_project/face2alias_aws/node_modules/@cloudscape-design/components/button-dropdown/utils/lib/default/button-dropdown/utils/use-button-dropdown.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { useOpenState } from '../../internal/components/options-list/utils/use-open-state';\nimport { ButtonDropdownProps, ButtonDropdownSettings, GroupToggle, HighlightProps, ItemActivate } from '../interfaces';\nimport { fireCancelableEvent, CancelableEventHandler, isPlainLeftClick } from '../../internal/events';\nimport { KeyCode } from '../../internal/keycode';\nimport { getItemTarget, isItemGroup, isLinkItem } from './utils';\nimport useHighlightedMenu from './use-highlighted-menu';\n\ninterface UseButtonDropdownOptions extends ButtonDropdownSettings {\n  items: ButtonDropdownProps.Items;\n  onItemClick?: CancelableEventHandler<ButtonDropdownProps.ItemClickDetails>;\n  onItemFollow?: CancelableEventHandler<ButtonDropdownProps.ItemClickDetails>;\n  onReturnFocus: () => void;\n  expandToViewport?: boolean;\n}\n\ninterface UseButtonDropdownApi extends HighlightProps {\n  isOpen: boolean;\n  onKeyDown: (event: React.KeyboardEvent) => void;\n  onKeyUp: (event: React.KeyboardEvent) => void;\n  onItemActivate: ItemActivate;\n  onGroupToggle: GroupToggle;\n  toggleDropdown: (options?: { moveHighlightOnOpen?: boolean }) => void;\n  closeDropdown: () => void;\n  setIsUsingMouse: (isUsingMouse: boolean) => void;\n}\n\nexport function useButtonDropdown({\n  items,\n  onItemClick,\n  onItemFollow,\n  onReturnFocus,\n  hasExpandableGroups,\n  isInRestrictedView = false,\n  expandToViewport = false,\n}: UseButtonDropdownOptions): UseButtonDropdownApi {\n  const {\n    targetItem,\n    isHighlighted,\n    isKeyboardHighlight,\n    isExpanded,\n    highlightItem,\n    moveHighlight,\n    expandGroup,\n    collapseGroup,\n    reset,\n    setIsUsingMouse,\n  } = useHighlightedMenu({\n    items,\n    hasExpandableGroups,\n    isInRestrictedView,\n  });\n\n  const { isOpen, closeDropdown, ...openStateProps } = useOpenState({ onClose: reset });\n  const toggleDropdown = (options: { moveHighlightOnOpen?: boolean } = {}) => {\n    const moveHighlightOnOpen = options.moveHighlightOnOpen ?? true;\n    if (!isOpen && moveHighlightOnOpen) {\n      moveHighlight(1);\n    }\n    openStateProps.toggleDropdown();\n  };\n\n  const onGroupToggle: GroupToggle = item => (!isExpanded(item) ? expandGroup(item) : collapseGroup());\n\n  const onItemActivate: ItemActivate = (item, event) => {\n    const details = {\n      id: item.id || 'undefined',\n      href: item.href,\n      external: item.external,\n      target: getItemTarget(item),\n    };\n    if (onItemFollow && item.href && isPlainLeftClick(event)) {\n      fireCancelableEvent(onItemFollow, details, event);\n    }\n    if (onItemClick) {\n      fireCancelableEvent(onItemClick, details, event);\n    }\n    onReturnFocus();\n    closeDropdown();\n  };\n\n  const doVerticalNavigation = (direction: -1 | 1) => {\n    if (isOpen) {\n      moveHighlight(direction);\n    }\n  };\n\n  const openAndSelectFirst = (event: React.KeyboardEvent) => {\n    toggleDropdown();\n    event.preventDefault();\n  };\n\n  const actOnParentDropdown = (event: React.KeyboardEvent) => {\n    // if there is no highlighted item we act on the trigger by opening or closing dropdown\n    if (!targetItem) {\n      if (isOpen && !isInRestrictedView) {\n        toggleDropdown();\n      } else {\n        openAndSelectFirst(event);\n      }\n    } else {\n      if (isItemGroup(targetItem)) {\n        onGroupToggle(targetItem, event);\n      } else {\n        onItemActivate(targetItem, event);\n      }\n    }\n  };\n\n  const activate = (event: React.KeyboardEvent, isEnter?: boolean) => {\n    setIsUsingMouse(false);\n\n    // if item is a link we rely on default behavior of an anchor, no need to prevent\n    if (targetItem && isLinkItem(targetItem) && isEnter) {\n      return;\n    }\n\n    event.preventDefault();\n    actOnParentDropdown(event);\n  };\n\n  const onKeyDown = (event: React.KeyboardEvent) => {\n    setIsUsingMouse(false);\n    switch (event.keyCode) {\n      case KeyCode.down: {\n        doVerticalNavigation(1);\n        event.preventDefault();\n        break;\n      }\n      case KeyCode.up: {\n        doVerticalNavigation(-1);\n        event.preventDefault();\n        break;\n      }\n      case KeyCode.space: {\n        // Prevent scrolling the list of items and highlighting the trigger\n        event.preventDefault();\n        break;\n      }\n      case KeyCode.enter: {\n        if (!targetItem?.disabled) {\n          activate(event, true);\n        }\n        break;\n      }\n      case KeyCode.left:\n      case KeyCode.right: {\n        if (targetItem && !targetItem.disabled && isItemGroup(targetItem) && !isExpanded(targetItem)) {\n          expandGroup();\n        } else if (hasExpandableGroups) {\n          collapseGroup();\n        }\n\n        event.preventDefault();\n        break;\n      }\n      case KeyCode.escape: {\n        onReturnFocus();\n        closeDropdown();\n        event.preventDefault();\n        break;\n      }\n      case KeyCode.tab: {\n        // When expanded to viewport the focus can't move naturally to the next element.\n        // Returning the focus to the trigger instead.\n        if (expandToViewport) {\n          onReturnFocus();\n        }\n        closeDropdown();\n        break;\n      }\n    }\n  };\n  const onKeyUp = (event: React.KeyboardEvent) => {\n    // We need to handle activating items with Space separately because there is a bug\n    // in Firefox where changing the focus during a Space keydown event it will trigger\n    // unexpected click events on the new element: https://bugzilla.mozilla.org/show_bug.cgi?id=1220143\n    if (event.keyCode === KeyCode.space && !targetItem?.disabled) {\n      activate(event);\n    }\n  };\n\n  return {\n    isOpen,\n    targetItem,\n    isHighlighted,\n    isKeyboardHighlight,\n    isExpanded,\n    highlightItem,\n    onKeyDown,\n    onKeyUp,\n    onItemActivate,\n    onGroupToggle,\n    toggleDropdown,\n    closeDropdown,\n    setIsUsingMouse,\n  };\n}\n"],"mappings":";AAIA,SAASA,YAAY,QAAQ,6DAA6D;AAE1F,SAASC,mBAAmB,EAA0BC,gBAAgB,QAAQ,uBAAuB;AACrG,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,aAAa,EAAEC,WAAW,EAAEC,UAAU,QAAQ,SAAS;AAChE,OAAOC,kBAAkB,MAAM,wBAAwB;AAqBvD,OAAM,SAAUC,iBAAiBA,CAAAC,IAAA,EAQN;EAAA,IARO;IAChCC,KAAK;IACLC,WAAW;IACXC,YAAY;IACZC,aAAa;IACbC,mBAAmB;IACnBC,kBAAkB,GAAG,KAAK;IAC1BC,gBAAgB,GAAG;EAAK,CACC,GAAAP,IAAA;EACzB,MAAM;IACJQ,UAAU;IACVC,aAAa;IACbC,mBAAmB;IACnBC,UAAU;IACVC,aAAa;IACbC,aAAa;IACbC,WAAW;IACXC,aAAa;IACbC,KAAK;IACLC;EAAe,CAChB,GAAGnB,kBAAkB,CAAC;IACrBG,KAAK;IACLI,mBAAmB;IACnBC;GACD,CAAC;EAEF,MAAMY,EAAA,GAA+C3B,YAAY,CAAC;MAAE4B,OAAO,EAAEH;IAAK,CAAE,CAAC;IAA/E;MAAEI,MAAM;MAAEC;IAAa,IAAAH,EAAwD;IAAnDI,cAAc,GAAAC,MAAA,CAAAL,EAAA,EAA1C,2BAA4C,CAAmC;EACrF,MAAMM,cAAc,GAAG,SAAAA,CAAA,EAAoD;IAAA,IAAnDC,OAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAA6C,EAAE;;IACrE,MAAMG,mBAAmB,GAAG,CAAAX,EAAA,GAAAO,OAAO,CAACI,mBAAmB,cAAAX,EAAA,cAAAA,EAAA,GAAI,IAAI;IAC/D,IAAI,CAACE,MAAM,IAAIS,mBAAmB,EAAE;MAClChB,aAAa,CAAC,CAAC,CAAC;;IAElBS,cAAc,CAACE,cAAc,EAAE;EACjC,CAAC;EAED,MAAMM,aAAa,GAAgBC,IAAI,IAAK,CAACpB,UAAU,CAACoB,IAAI,CAAC,GAAGjB,WAAW,CAACiB,IAAI,CAAC,GAAGhB,aAAa,EAAG;EAEpG,MAAMiB,cAAc,GAAiBA,CAACD,IAAI,EAAEE,KAAK,KAAI;IACnD,MAAMC,OAAO,GAAG;MACdC,EAAE,EAAEJ,IAAI,CAACI,EAAE,IAAI,WAAW;MAC1BC,IAAI,EAAEL,IAAI,CAACK,IAAI;MACfC,QAAQ,EAAEN,IAAI,CAACM,QAAQ;MACvBC,MAAM,EAAE3C,aAAa,CAACoC,IAAI;KAC3B;IACD,IAAI5B,YAAY,IAAI4B,IAAI,CAACK,IAAI,IAAI3C,gBAAgB,CAACwC,KAAK,CAAC,EAAE;MACxDzC,mBAAmB,CAACW,YAAY,EAAE+B,OAAO,EAAED,KAAK,CAAC;;IAEnD,IAAI/B,WAAW,EAAE;MACfV,mBAAmB,CAACU,WAAW,EAAEgC,OAAO,EAAED,KAAK,CAAC;;IAElD7B,aAAa,EAAE;IACfiB,aAAa,EAAE;EACjB,CAAC;EAED,MAAMkB,oBAAoB,GAAIC,SAAiB,IAAI;IACjD,IAAIpB,MAAM,EAAE;MACVP,aAAa,CAAC2B,SAAS,CAAC;;EAE5B,CAAC;EAED,MAAMC,kBAAkB,GAAIR,KAA0B,IAAI;IACxDT,cAAc,EAAE;IAChBS,KAAK,CAACS,cAAc,EAAE;EACxB,CAAC;EAED,MAAMC,mBAAmB,GAAIV,KAA0B,IAAI;IACzD;IACA,IAAI,CAACzB,UAAU,EAAE;MACf,IAAIY,MAAM,IAAI,CAACd,kBAAkB,EAAE;QACjCkB,cAAc,EAAE;OACjB,MAAM;QACLiB,kBAAkB,CAACR,KAAK,CAAC;;KAE5B,MAAM;MACL,IAAIrC,WAAW,CAACY,UAAU,CAAC,EAAE;QAC3BsB,aAAa,CAACtB,UAAU,EAAEyB,KAAK,CAAC;OACjC,MAAM;QACLD,cAAc,CAACxB,UAAU,EAAEyB,KAAK,CAAC;;;EAGvC,CAAC;EAED,MAAMW,QAAQ,GAAGA,CAACX,KAA0B,EAAEY,OAAiB,KAAI;IACjE5B,eAAe,CAAC,KAAK,CAAC;IAEtB;IACA,IAAIT,UAAU,IAAIX,UAAU,CAACW,UAAU,CAAC,IAAIqC,OAAO,EAAE;MACnD;;IAGFZ,KAAK,CAACS,cAAc,EAAE;IACtBC,mBAAmB,CAACV,KAAK,CAAC;EAC5B,CAAC;EAED,MAAMa,SAAS,GAAIb,KAA0B,IAAI;IAC/ChB,eAAe,CAAC,KAAK,CAAC;IACtB,QAAQgB,KAAK,CAACc,OAAO;MACnB,KAAKrD,OAAO,CAACsD,IAAI;QAAE;UACjBT,oBAAoB,CAAC,CAAC,CAAC;UACvBN,KAAK,CAACS,cAAc,EAAE;UACtB;;MAEF,KAAKhD,OAAO,CAACuD,EAAE;QAAE;UACfV,oBAAoB,CAAC,CAAC,CAAC,CAAC;UACxBN,KAAK,CAACS,cAAc,EAAE;UACtB;;MAEF,KAAKhD,OAAO,CAACwD,KAAK;QAAE;UAClB;UACAjB,KAAK,CAACS,cAAc,EAAE;UACtB;;MAEF,KAAKhD,OAAO,CAACyD,KAAK;QAAE;UAClB,IAAI,EAAC3C,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAE4C,QAAQ,GAAE;YACzBR,QAAQ,CAACX,KAAK,EAAE,IAAI,CAAC;;UAEvB;;MAEF,KAAKvC,OAAO,CAAC2D,IAAI;MACjB,KAAK3D,OAAO,CAAC4D,KAAK;QAAE;UAClB,IAAI9C,UAAU,IAAI,CAACA,UAAU,CAAC4C,QAAQ,IAAIxD,WAAW,CAACY,UAAU,CAAC,IAAI,CAACG,UAAU,CAACH,UAAU,CAAC,EAAE;YAC5FM,WAAW,EAAE;WACd,MAAM,IAAIT,mBAAmB,EAAE;YAC9BU,aAAa,EAAE;;UAGjBkB,KAAK,CAACS,cAAc,EAAE;UACtB;;MAEF,KAAKhD,OAAO,CAAC6D,MAAM;QAAE;UACnBnD,aAAa,EAAE;UACfiB,aAAa,EAAE;UACfY,KAAK,CAACS,cAAc,EAAE;UACtB;;MAEF,KAAKhD,OAAO,CAAC8D,GAAG;QAAE;UAChB;UACA;UACA,IAAIjD,gBAAgB,EAAE;YACpBH,aAAa,EAAE;;UAEjBiB,aAAa,EAAE;UACf;;;EAGN,CAAC;EACD,MAAMoC,OAAO,GAAIxB,KAA0B,IAAI;IAC7C;IACA;IACA;IACA,IAAIA,KAAK,CAACc,OAAO,KAAKrD,OAAO,CAACwD,KAAK,IAAI,EAAC1C,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAE4C,QAAQ,GAAE;MAC5DR,QAAQ,CAACX,KAAK,CAAC;;EAEnB,CAAC;EAED,OAAO;IACLb,MAAM;IACNZ,UAAU;IACVC,aAAa;IACbC,mBAAmB;IACnBC,UAAU;IACVC,aAAa;IACbkC,SAAS;IACTW,OAAO;IACPzB,cAAc;IACdF,aAAa;IACbN,cAAc;IACdH,aAAa;IACbJ;GACD;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}