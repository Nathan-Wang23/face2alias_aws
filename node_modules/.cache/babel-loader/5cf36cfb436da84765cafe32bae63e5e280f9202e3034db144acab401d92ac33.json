{"ast":null,"code":"var _jsxFileName = \"/Users/nelaurar/Desktop/proj /my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\n// add couldscape\n//import * as React1 from \"react\";\nimport FileUpload from \"@cloudscape-design/components/file-upload\";\nimport FormField from \"@cloudscape-design/components/form-field\";\n\n// add from the LogRocket\nimport React, { useEffect, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport Hamburger from 'hamburger-react'; // hamburger \n//\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App(props) {\n\n  //  <header className=\"App-header\">\n  //   <img src={logo} className=\"App-logo\" alt=\"logo\" />\n  //   <p>\n  //     Edit <code>src/App.js</code> and save to reload.\n  //   </p>\n  //   <a\n  //     className=\"App-link\"\n  //     href=\"https://reactjs.org\"\n  //     target=\"_blank\"\n  //     rel=\"noopener noreferrer\"\n  //   >\n  //     Learn React\n  //   </a>\n  // </header> \n}\n\n// export default App;\n_c = App;\nexport default _s(() => {\n  _s();\n  const [value, setValue] = React.useState([]);\n  return /*#__PURE__*/_jsxDEV(FormField, {\n    label: \"Form field label\",\n    description: \"Description\",\n    children: /*#__PURE__*/_jsxDEV(FileUpload, {\n      onChange: _ref => {\n        let {\n          detail\n        } = _ref;\n        return setValue(detail.value);\n      },\n      value: value,\n      i18nStrings: {\n        uploadButtonText: e => e ? \"Choose files\" : \"Choose file\",\n        dropzoneText: e => e ? \"Drop files to upload\" : \"Drop file to upload\",\n        removeFileAriaLabel: e => `Remove file ${e + 1}`,\n        limitShowFewer: \"Show fewer files\",\n        limitShowMore: \"Show more files\",\n        errorIconAriaLabel: \"Error\"\n      },\n      showFileLastModified: true,\n      showFileSize: true,\n      showFileThumbnail: true,\n      tokenLimit: 3,\n      constraintText: \"Hint text for file requirements\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}, \"nXyUXLCLqjbO8MhWxJGJNfpoKZM=\");\n\n// // Upload file \n// import * as React from \"react\" - https://cloudscape.design/components/file-upload/?tabId=playground;\n// import FileUpload from \"@cloudscape-design/components/file-upload\";\n// import FormField from \"@cloudscape-design/components/form-field\";\n\n// export default () => {\n//   const [value, setValue] = React.useState([]);\n//   return (\n//     <FormField\n//       label=\"Form field label\"\n//       description=\"Description\"\n//     >\n//       <FileUpload\n//         onChange={({ detail }) => setValue(detail.value)}\n//         value={value}\n//         i18nStrings={{\n//           uploadButtonText: e =>\n//             e ? \"Choose files\" : \"Choose file\",\n//           dropzoneText: e =>\n//             e\n//               ? \"Drop files to upload\"\n//               : \"Drop file to upload\",\n//           removeFileAriaLabel: e =>\n//             `Remove file ${e + 1}`,\n//           limitShowFewer: \"Show fewer files\",\n//           limitShowMore: \"Show more files\",\n//           errorIconAriaLabel: \"Error\"\n//         }}\n//         showFileLastModified\n//         showFileSize\n//         showFileThumbnail\n//         tokenLimit={3}\n//         constraintText=\"Hint text for file requirements\"\n//       />\n//     </FormField>\n//   );\n// }\n\n// From the website - https://blog.logrocket.com/create-drag-and-drop-component-react-dropzone/\n// function App(props) {\n//   const [files, setFiles] = useState([]);\n//   const {getRootProps, getInputProps} = useDropzone({\n//     accept: 'image/*',\n//     onDrop: acceptedFiles => {\n//       setFiles(acceptedFiles.map(file => Object.assign(file, {\n//         preview: URL.createObjectURL(file)\n//       })));\n//     }\n//   });\n\n//   const thumbs = files.map(file => (\n//     <div style={thumb} key={file.name}>\n//       <div style={thumbInner}>\n//         <img\n//           src={file.preview}\n//           style={img}\n//         />\n//       </div>\n//     </div>\n//   ));\n\n//   useEffect(() => {\n//     // Make sure to revoke the data uris to avoid memory leaks\n//     files.forEach(file => URL.revokeObjectURL(file.preview));\n//   }, [files]);\n\n//   return (\n//     <section className=\"container\">\n//       <div {...getRootProps({className: 'dropzone'})}>\n//         <input {...getInputProps()} />\n//         <p>Drag 'n' drop some files here, or click to select files</p>\n//       </div>\n//       <aside style={thumbsContainer}>\n//         {thumbs}\n//       </aside>\n//     </section>\n//   );\n\n// }\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","FileUpload","FormField","React","useEffect","useState","useDropzone","Hamburger","jsxDEV","_jsxDEV","App","props","_c","_s","value","setValue","label","description","children","onChange","_ref","detail","i18nStrings","uploadButtonText","e","dropzoneText","removeFileAriaLabel","limitShowFewer","limitShowMore","errorIconAriaLabel","showFileLastModified","showFileSize","showFileThumbnail","tokenLimit","constraintText","fileName","_jsxFileName","lineNumber","columnNumber","$RefreshReg$"],"sources":["/Users/nelaurar/Desktop/proj /my-app/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n// add couldscape\n//import * as React1 from \"react\";\nimport FileUpload from \"@cloudscape-design/components/file-upload\";\nimport FormField from \"@cloudscape-design/components/form-field\";\n\n// add from the LogRocket\nimport React, {useEffect, useState} from 'react';\nimport {useDropzone} from 'react-dropzone';\nimport Hamburger from 'hamburger-react' // hamburger \n//\n\n\nfunction App(props) {\n  \n      //  <header className=\"App-header\">\n      //   <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      //   <p>\n      //     Edit <code>src/App.js</code> and save to reload.\n      //   </p>\n      //   <a\n      //     className=\"App-link\"\n      //     href=\"https://reactjs.org\"\n      //     target=\"_blank\"\n      //     rel=\"noopener noreferrer\"\n      //   >\n      //     Learn React\n      //   </a>\n      // </header> \n}\n\n// export default App;\nexport default () => {\n  const [value, setValue] = React.useState([]);\n  return (\n    <FormField\n      label=\"Form field label\"\n      description=\"Description\"\n    >\n      <FileUpload\n        onChange={({ detail }) => setValue(detail.value)}\n        value={value}\n        i18nStrings={{\n          uploadButtonText: e =>\n            e ? \"Choose files\" : \"Choose file\",\n          dropzoneText: e =>\n            e\n              ? \"Drop files to upload\"\n              : \"Drop file to upload\",\n          removeFileAriaLabel: e =>\n            `Remove file ${e + 1}`,\n          limitShowFewer: \"Show fewer files\",\n          limitShowMore: \"Show more files\",\n          errorIconAriaLabel: \"Error\"\n        }}\n        showFileLastModified\n        showFileSize\n        showFileThumbnail\n        tokenLimit={3}\n        constraintText=\"Hint text for file requirements\"\n      />\n    </FormField>\n  );\n}\n\n// // Upload file \n// import * as React from \"react\" - https://cloudscape.design/components/file-upload/?tabId=playground;\n// import FileUpload from \"@cloudscape-design/components/file-upload\";\n// import FormField from \"@cloudscape-design/components/form-field\";\n\n// export default () => {\n//   const [value, setValue] = React.useState([]);\n//   return (\n//     <FormField\n//       label=\"Form field label\"\n//       description=\"Description\"\n//     >\n//       <FileUpload\n//         onChange={({ detail }) => setValue(detail.value)}\n//         value={value}\n//         i18nStrings={{\n//           uploadButtonText: e =>\n//             e ? \"Choose files\" : \"Choose file\",\n//           dropzoneText: e =>\n//             e\n//               ? \"Drop files to upload\"\n//               : \"Drop file to upload\",\n//           removeFileAriaLabel: e =>\n//             `Remove file ${e + 1}`,\n//           limitShowFewer: \"Show fewer files\",\n//           limitShowMore: \"Show more files\",\n//           errorIconAriaLabel: \"Error\"\n//         }}\n//         showFileLastModified\n//         showFileSize\n//         showFileThumbnail\n//         tokenLimit={3}\n//         constraintText=\"Hint text for file requirements\"\n//       />\n//     </FormField>\n//   );\n// }\n\n\n// From the website - https://blog.logrocket.com/create-drag-and-drop-component-react-dropzone/\n// function App(props) {\n//   const [files, setFiles] = useState([]);\n//   const {getRootProps, getInputProps} = useDropzone({\n//     accept: 'image/*',\n//     onDrop: acceptedFiles => {\n//       setFiles(acceptedFiles.map(file => Object.assign(file, {\n//         preview: URL.createObjectURL(file)\n//       })));\n//     }\n//   });\n\n//   const thumbs = files.map(file => (\n//     <div style={thumb} key={file.name}>\n//       <div style={thumbInner}>\n//         <img\n//           src={file.preview}\n//           style={img}\n//         />\n//       </div>\n//     </div>\n//   ));\n\n//   useEffect(() => {\n//     // Make sure to revoke the data uris to avoid memory leaks\n//     files.forEach(file => URL.revokeObjectURL(file.preview));\n//   }, [files]);\n\n//   return (\n//     <section className=\"container\">\n//       <div {...getRootProps({className: 'dropzone'})}>\n//         <input {...getInputProps()} />\n//         <p>Drag 'n' drop some files here, or click to select files</p>\n//       </div>\n//       <aside style={thumbsContainer}>\n//         {thumbs}\n//       </aside>\n//     </section>\n//   );\n    \n// }\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB;AACA;AACA,OAAOC,UAAU,MAAM,2CAA2C;AAClE,OAAOC,SAAS,MAAM,0CAA0C;;AAEhE;AACA,OAAOC,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAAQC,WAAW,QAAO,gBAAgB;AAC1C,OAAOC,SAAS,MAAM,iBAAiB,EAAC;AACxC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,SAASC,GAAGA,CAACC,KAAK,EAAE;;EAEd;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAAA;;AAGN;AAAAC,EAAA,GAlBSF,GAAG;AAmBZ,eAAAG,EAAA,CAAe,MAAM;EAAAA,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,KAAK,CAACE,QAAQ,CAAC,EAAE,CAAC;EAC5C,oBACEI,OAAA,CAACP,SAAS;IACRc,KAAK,EAAC,kBAAkB;IACxBC,WAAW,EAAC,aAAa;IAAAC,QAAA,eAEzBT,OAAA,CAACR,UAAU;MACTkB,QAAQ,EAAEC,IAAA;QAAA,IAAC;UAAEC;QAAO,CAAC,GAAAD,IAAA;QAAA,OAAKL,QAAQ,CAACM,MAAM,CAACP,KAAK,CAAC;MAAA,CAAC;MACjDA,KAAK,EAAEA,KAAM;MACbQ,WAAW,EAAE;QACXC,gBAAgB,EAAEC,CAAC,IACjBA,CAAC,GAAG,cAAc,GAAG,aAAa;QACpCC,YAAY,EAAED,CAAC,IACbA,CAAC,GACG,sBAAsB,GACtB,qBAAqB;QAC3BE,mBAAmB,EAAEF,CAAC,IACnB,eAAcA,CAAC,GAAG,CAAE,EAAC;QACxBG,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAE,iBAAiB;QAChCC,kBAAkB,EAAE;MACtB,CAAE;MACFC,oBAAoB;MACpBC,YAAY;MACZC,iBAAiB;MACjBC,UAAU,EAAE,CAAE;MACdC,cAAc,EAAC;IAAiC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEhB,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA1B,EAAA;AAAA2B,YAAA,CAAA3B,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}