{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useState } from 'react';\nimport { ALWAYS_VISUAL_REFRESH } from '../../environment';\nimport { isMotionDisabled } from '../../motion';\nimport { findUpUntil } from '../../utils/dom';\nimport { useMutationObserver } from '../use-mutation-observer';\nimport { isDevelopment } from '../../is-development';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\n// Note that this hook doesn't take into consideration @media print (unlike the dark mode CSS),\n// due to challenges with cross-browser implementations of media/print state change listeners.\n// This means that components using this hook will render in dark mode even when printing.\nexport function useCurrentMode(elementRef) {\n  const [value, setValue] = useState('light');\n  useMutationObserver(elementRef, node => {\n    const darkModeParent = findUpUntil(node, node => node.classList.contains('awsui-polaris-dark-mode') || node.classList.contains('awsui-dark-mode'));\n    setValue(darkModeParent ? 'dark' : 'light');\n  });\n  return value;\n}\nexport function useDensityMode(elementRef) {\n  const [value, setValue] = useState('comfortable');\n  useMutationObserver(elementRef, node => {\n    const compactModeParent = findUpUntil(node, node => node.classList.contains('awsui-polaris-compact-mode') || node.classList.contains('awsui-compact-mode'));\n    setValue(compactModeParent ? 'compact' : 'comfortable');\n  });\n  return value;\n}\nexport const useVisualRefresh = ALWAYS_VISUAL_REFRESH ? () => true : useVisualRefreshDynamic;\n// We expect VR is to be set only once and before the application is rendered.\nlet visualRefreshState = undefined;\n// for testing\nexport function clearVisualRefreshState() {\n  visualRefreshState = undefined;\n}\nfunction detectVisualRefresh() {\n  return typeof document !== 'undefined' && !!document.querySelector('.awsui-visual-refresh');\n}\nexport function useVisualRefreshDynamic() {\n  if (visualRefreshState === undefined) {\n    visualRefreshState = detectVisualRefresh();\n  }\n  if (isDevelopment) {\n    const newVisualRefreshState = detectVisualRefresh();\n    if (newVisualRefreshState !== visualRefreshState) {\n      warnOnce('Visual Refresh', 'Dynamic visual refresh change detected. This is not supported. ' + 'Make sure `awsui-visual-refresh` is attached to the `<body>` element before initial React render');\n    }\n  }\n  return visualRefreshState;\n}\nexport function useReducedMotion(elementRef) {\n  const [value, setValue] = useState(false);\n  useMutationObserver(elementRef, node => {\n    setValue(isMotionDisabled(node));\n  });\n  return value;\n}","map":{"version":3,"names":["useState","ALWAYS_VISUAL_REFRESH","isMotionDisabled","findUpUntil","useMutationObserver","isDevelopment","warnOnce","useCurrentMode","elementRef","value","setValue","node","darkModeParent","classList","contains","useDensityMode","compactModeParent","useVisualRefresh","useVisualRefreshDynamic","visualRefreshState","undefined","clearVisualRefreshState","detectVisualRefresh","document","querySelector","newVisualRefreshState","useReducedMotion"],"sources":["/Users/ndwang/Documents/projects/face2alias_aws/node_modules/@cloudscape-design/components/internal/hooks/use-visual-mode/lib/default/internal/hooks/use-visual-mode/index.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState } from 'react';\nimport { ALWAYS_VISUAL_REFRESH } from '../../environment';\nimport { isMotionDisabled } from '../../motion';\nimport { findUpUntil } from '../../utils/dom';\nimport { useMutationObserver } from '../use-mutation-observer';\nimport { isDevelopment } from '../../is-development';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\n\n// Note that this hook doesn't take into consideration @media print (unlike the dark mode CSS),\n// due to challenges with cross-browser implementations of media/print state change listeners.\n// This means that components using this hook will render in dark mode even when printing.\nexport function useCurrentMode(elementRef: React.RefObject<HTMLElement>) {\n  const [value, setValue] = useState<'light' | 'dark'>('light');\n  useMutationObserver(elementRef, node => {\n    const darkModeParent = findUpUntil(\n      node,\n      node => node.classList.contains('awsui-polaris-dark-mode') || node.classList.contains('awsui-dark-mode')\n    );\n    setValue(darkModeParent ? 'dark' : 'light');\n  });\n  return value;\n}\n\nexport function useDensityMode(elementRef: React.RefObject<HTMLElement>) {\n  const [value, setValue] = useState<'comfortable' | 'compact'>('comfortable');\n  useMutationObserver(elementRef, node => {\n    const compactModeParent = findUpUntil(\n      node,\n      node => node.classList.contains('awsui-polaris-compact-mode') || node.classList.contains('awsui-compact-mode')\n    );\n    setValue(compactModeParent ? 'compact' : 'comfortable');\n  });\n  return value;\n}\n\nexport const useVisualRefresh = ALWAYS_VISUAL_REFRESH ? () => true : useVisualRefreshDynamic;\n\n// We expect VR is to be set only once and before the application is rendered.\nlet visualRefreshState: undefined | boolean = undefined;\n\n// for testing\nexport function clearVisualRefreshState() {\n  visualRefreshState = undefined;\n}\n\nfunction detectVisualRefresh() {\n  return typeof document !== 'undefined' && !!document.querySelector('.awsui-visual-refresh');\n}\n\nexport function useVisualRefreshDynamic() {\n  if (visualRefreshState === undefined) {\n    visualRefreshState = detectVisualRefresh();\n  }\n  if (isDevelopment) {\n    const newVisualRefreshState = detectVisualRefresh();\n    if (newVisualRefreshState !== visualRefreshState) {\n      warnOnce(\n        'Visual Refresh',\n        'Dynamic visual refresh change detected. This is not supported. ' +\n          'Make sure `awsui-visual-refresh` is attached to the `<body>` element before initial React render'\n      );\n    }\n  }\n  return visualRefreshState;\n}\n\nexport function useReducedMotion(elementRef: React.RefObject<HTMLElement>) {\n  const [value, setValue] = useState(false);\n  useMutationObserver(elementRef, node => {\n    setValue(isMotionDisabled(node));\n  });\n  return value;\n}\n"],"mappings":"AAAA;AACA;AACA,SAAgBA,QAAQ,QAAQ,OAAO;AACvC,SAASC,qBAAqB,QAAQ,mBAAmB;AACzD,SAASC,gBAAgB,QAAQ,cAAc;AAC/C,SAASC,WAAW,QAAQ,iBAAiB;AAC7C,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,aAAa,QAAQ,sBAAsB;AACpD,SAASC,QAAQ,QAAQ,+CAA+C;AAExE;AACA;AACA;AACA,OAAM,SAAUC,cAAcA,CAACC,UAAwC;EACrE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAmB,OAAO,CAAC;EAC7DI,mBAAmB,CAACI,UAAU,EAAEG,IAAI,IAAG;IACrC,MAAMC,cAAc,GAAGT,WAAW,CAChCQ,IAAI,EACJA,IAAI,IAAIA,IAAI,CAACE,SAAS,CAACC,QAAQ,CAAC,yBAAyB,CAAC,IAAIH,IAAI,CAACE,SAAS,CAACC,QAAQ,CAAC,iBAAiB,CAAC,CACzG;IACDJ,QAAQ,CAACE,cAAc,GAAG,MAAM,GAAG,OAAO,CAAC;EAC7C,CAAC,CAAC;EACF,OAAOH,KAAK;AACd;AAEA,OAAM,SAAUM,cAAcA,CAACP,UAAwC;EACrE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAA4B,aAAa,CAAC;EAC5EI,mBAAmB,CAACI,UAAU,EAAEG,IAAI,IAAG;IACrC,MAAMK,iBAAiB,GAAGb,WAAW,CACnCQ,IAAI,EACJA,IAAI,IAAIA,IAAI,CAACE,SAAS,CAACC,QAAQ,CAAC,4BAA4B,CAAC,IAAIH,IAAI,CAACE,SAAS,CAACC,QAAQ,CAAC,oBAAoB,CAAC,CAC/G;IACDJ,QAAQ,CAACM,iBAAiB,GAAG,SAAS,GAAG,aAAa,CAAC;EACzD,CAAC,CAAC;EACF,OAAOP,KAAK;AACd;AAEA,OAAO,MAAMQ,gBAAgB,GAAGhB,qBAAqB,GAAG,MAAM,IAAI,GAAGiB,uBAAuB;AAE5F;AACA,IAAIC,kBAAkB,GAAwBC,SAAS;AAEvD;AACA,OAAM,SAAUC,uBAAuBA,CAAA;EACrCF,kBAAkB,GAAGC,SAAS;AAChC;AAEA,SAASE,mBAAmBA,CAAA;EAC1B,OAAO,OAAOC,QAAQ,KAAK,WAAW,IAAI,CAAC,CAACA,QAAQ,CAACC,aAAa,CAAC,uBAAuB,CAAC;AAC7F;AAEA,OAAM,SAAUN,uBAAuBA,CAAA;EACrC,IAAIC,kBAAkB,KAAKC,SAAS,EAAE;IACpCD,kBAAkB,GAAGG,mBAAmB,EAAE;;EAE5C,IAAIjB,aAAa,EAAE;IACjB,MAAMoB,qBAAqB,GAAGH,mBAAmB,EAAE;IACnD,IAAIG,qBAAqB,KAAKN,kBAAkB,EAAE;MAChDb,QAAQ,CACN,gBAAgB,EAChB,iEAAiE,GAC/D,kGAAkG,CACrG;;;EAGL,OAAOa,kBAAkB;AAC3B;AAEA,OAAM,SAAUO,gBAAgBA,CAAClB,UAAwC;EACvE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACzCI,mBAAmB,CAACI,UAAU,EAAEG,IAAI,IAAG;IACrCD,QAAQ,CAACR,gBAAgB,CAACS,IAAI,CAAC,CAAC;EAClC,CAAC,CAAC;EACF,OAAOF,KAAK;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}