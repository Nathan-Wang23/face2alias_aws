{"ast":null,"code":"var _jsxFileName = \"/Users/ndwang/Documents/projects/face2alias_aws/src/component/Home/ImageBox.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageBox = _ref => {\n  _s();\n  let {\n    image_base64,\n    boxesCoordinates,\n    width,\n    height,\n    color,\n    aliases\n  } = _ref;\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    if (!image_base64 || !boxesCoordinates || boxesCoordinates.length === 0) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const image = new Image();\n    image.src = `${image_base64}`;\n    image.onload = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height); // make sure is clean \n      ctx.drawImage(image, 0, 0, width, height);\n\n      // Draw boxes on the image based on the coordinates\n      for (let i = 0; i < boxesCoordinates.length; i++) {\n        // const {boxesCoordinates, aliasesImg} = boxWithName;// adding the alias \n\n        ctx.strokeStyle = color[i];\n        ctx.font = \"14px Arial\"; // set to aws font\n        ctx.lineWidth = 2;\n        ctx.strokeRect(boxesCoordinates[i].x, boxesCoordinates[i].y, boxesCoordinates[i].width, boxesCoordinates[i].height); // draw the box\n\n        if (aliases[i] !== \"na\") {\n          ctx.fillStyle = \"#ffffff\";\n          const textWidth = ctx.measureText(aliases[i]).width;\n          ctx.fillRect(boxesCoordinates[i].x + boxesCoordinates[i].width / 2 - textWidth / 2 - 2, boxesCoordinates[i].y - 20, textWidth + 4, 20);\n          ctx.fillStyle = color[i];\n          ctx.fillStyle = \"#000000\";\n          ctx.fillText(aliases[i], boxesCoordinates[i].x + boxesCoordinates[i].width / 2 - textWidth / 2, boxesCoordinates[i].y - 5);\n        }\n      }\n    };\n  }, [image_base64, boxesCoordinates]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: width,\n    height: height\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 10\n  }, this);\n};\n_s(ImageBox, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = ImageBox;\nexport default ImageBox;\nvar _c;\n$RefreshReg$(_c, \"ImageBox\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","ImageBox","_ref","_s","image_base64","boxesCoordinates","width","height","color","aliases","canvasRef","length","canvas","current","ctx","getContext","image","Image","src","onload","clearRect","drawImage","i","strokeStyle","font","lineWidth","strokeRect","x","y","fillStyle","textWidth","measureText","fillRect","fillText","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ndwang/Documents/projects/face2alias_aws/src/component/Home/ImageBox.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\n\nconst ImageBox = ({ image_base64, boxesCoordinates, width, height, color, aliases}) => {\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    if (!image_base64 || !boxesCoordinates || boxesCoordinates.length === 0) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n\n    const image = new Image();\n    image.src = `${image_base64}`;\n\n    image.onload = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height); // make sure is clean \n      ctx.drawImage(image, 0, 0, width, height);\n\n      // Draw boxes on the image based on the coordinates\n      for (let i = 0; i < boxesCoordinates.length; i++) {\n\n        // const {boxesCoordinates, aliasesImg} = boxWithName;// adding the alias \n\n        ctx.strokeStyle = color[i];\n        ctx.font = \"14px Arial\"; // set to aws font\n        ctx.lineWidth = 2;\n        ctx.strokeRect(boxesCoordinates[i].x, boxesCoordinates[i].y, boxesCoordinates[i].width, boxesCoordinates[i].height); // draw the box\n      \n\n        if (aliases[i] !== \"na\") {\n          ctx.fillStyle = \"#ffffff\";\n          const textWidth = ctx.measureText(aliases[i]).width;\n          ctx.fillRect(boxesCoordinates[i].x + boxesCoordinates[i].width / 2 - textWidth / 2 - 2, boxesCoordinates[i].y - 20, textWidth + 4, 20);\n\n          ctx.fillStyle = color[i]; \n          ctx.fillStyle = \"#000000\";\n          ctx.fillText(aliases[i], boxesCoordinates[i].x + boxesCoordinates[i].width / 2 - textWidth / 2, boxesCoordinates[i].y -5);\n      }\n      }\n    };\n  }, [image_base64, boxesCoordinates]);\n\n  return <canvas ref={canvasRef} width={width} height={height} />;\n};\n\nexport default ImageBox;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}