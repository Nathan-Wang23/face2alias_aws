{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getOverflowParents, getOverflowParentDimensions } from '../../utils/scrollable-containers';\nimport styles from './styles.css.js';\nconst AVAILABLE_SPACE_RESERVE_DEFAULT = 50;\nconst AVAILABLE_SPACE_RESERVE_MOBILE_VERTICAL = 19; // 50 - 31\nconst AVAILABLE_SPACE_RESERVE_MOBILE_HORIZONTAL = 20;\nconst getClosestParentDimensions = element => {\n  const parents = getOverflowParents(element).map(el => {\n    const {\n      height,\n      width,\n      top,\n      left\n    } = el.getBoundingClientRect();\n    return {\n      height,\n      width,\n      top,\n      left\n    };\n  });\n  return parents.shift();\n};\nexport const getAvailableSpace = function (trigger, dropdown, overflowParents) {\n  let stretchWidth = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  let stretchHeight = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  let isMobile = arguments.length > 5 ? arguments[5] : undefined;\n  const availableSpaceReserveVertical = stretchHeight ? 0 : isMobile ? AVAILABLE_SPACE_RESERVE_MOBILE_VERTICAL : AVAILABLE_SPACE_RESERVE_DEFAULT;\n  const availableSpaceReserveHorizontal = stretchWidth ? 0 : isMobile ? AVAILABLE_SPACE_RESERVE_MOBILE_HORIZONTAL : AVAILABLE_SPACE_RESERVE_DEFAULT;\n  const {\n    bottom: triggerBottom,\n    left: triggerLeft,\n    right: triggerRight\n  } = trigger.getBoundingClientRect();\n  return overflowParents.reduce((_ref, overflowParent) => {\n    let {\n      above,\n      below,\n      left,\n      right\n    } = _ref;\n    const offsetTop = triggerBottom - overflowParent.top;\n    const currentAbove = offsetTop - trigger.offsetHeight - availableSpaceReserveVertical;\n    const currentBelow = overflowParent.height - offsetTop - availableSpaceReserveVertical;\n    const currentLeft = triggerRight - overflowParent.left - availableSpaceReserveHorizontal;\n    const currentRight = overflowParent.left + overflowParent.width - triggerLeft - availableSpaceReserveHorizontal;\n    return {\n      above: Math.min(above, currentAbove),\n      below: Math.min(below, currentBelow),\n      left: Math.min(left, currentLeft),\n      right: Math.min(right, currentRight)\n    };\n  }, {\n    above: Number.MAX_VALUE,\n    below: Number.MAX_VALUE,\n    left: Number.MAX_VALUE,\n    right: Number.MAX_VALUE\n  });\n};\nexport const getInteriorAvailableSpace = (trigger, dropdown, overflowParents, isMobile) => {\n  const AVAILABLE_SPACE_RESERVE_VERTICAL = isMobile ? AVAILABLE_SPACE_RESERVE_MOBILE_VERTICAL : AVAILABLE_SPACE_RESERVE_DEFAULT;\n  const AVAILABLE_SPACE_RESERVE_HORIZONTAL = isMobile ? AVAILABLE_SPACE_RESERVE_MOBILE_HORIZONTAL : AVAILABLE_SPACE_RESERVE_DEFAULT;\n  const {\n    bottom: triggerBottom,\n    top: triggerTop,\n    left: triggerLeft,\n    right: triggerRight\n  } = trigger.getBoundingClientRect();\n  return overflowParents.reduce((_ref2, overflowParent) => {\n    let {\n      above,\n      below,\n      left,\n      right\n    } = _ref2;\n    const currentAbove = triggerBottom - overflowParent.top - AVAILABLE_SPACE_RESERVE_VERTICAL;\n    const currentBelow = overflowParent.height - triggerTop + overflowParent.top - AVAILABLE_SPACE_RESERVE_VERTICAL;\n    const currentLeft = triggerLeft - overflowParent.left - AVAILABLE_SPACE_RESERVE_HORIZONTAL;\n    const currentRight = overflowParent.left + overflowParent.width - triggerRight - AVAILABLE_SPACE_RESERVE_HORIZONTAL;\n    return {\n      above: Math.min(above, currentAbove),\n      below: Math.min(below, currentBelow),\n      left: Math.min(left, currentLeft),\n      right: Math.min(right, currentRight)\n    };\n  }, {\n    above: Number.MAX_VALUE,\n    below: Number.MAX_VALUE,\n    left: Number.MAX_VALUE,\n    right: Number.MAX_VALUE\n  });\n};\nexport const getDropdownPosition = function (trigger, dropdown, overflowParents, minWidth) {\n  let preferCenter = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  let stretchWidth = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  let stretchHeight = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n  let isMobile = arguments.length > 7 ? arguments[7] : undefined;\n  const availableSpace = getAvailableSpace(trigger, dropdown, overflowParents, stretchWidth, stretchHeight, isMobile);\n  const triggerWidth = trigger.getBoundingClientRect().width;\n  minWidth = minWidth ? Math.min(triggerWidth, minWidth) : triggerWidth;\n  const requiredWidth = dropdown.getBoundingClientRect().width;\n  // dropdown should not be smaller than the trigger\n  const idealWidth = Math.max(requiredWidth, minWidth);\n  let dropLeft;\n  let left = null;\n  let width = idealWidth;\n  //1. Can it be positioned with ideal width to the right?\n  if (idealWidth <= availableSpace.right) {\n    dropLeft = false;\n    //2. Can it be positioned with ideal width to the left?\n  } else if (idealWidth <= availableSpace.left) {\n    dropLeft = true;\n    //3. Fit into biggest available space either on left or right\n  } else {\n    dropLeft = availableSpace.left > availableSpace.right;\n    width = Math.max(availableSpace.left, availableSpace.right, minWidth);\n  }\n  if (preferCenter) {\n    const spillOver = (idealWidth - triggerWidth) / 2;\n    // availableSpace always includes the trigger width, but we want to exclude that\n    const availableOutsideLeft = availableSpace.left - triggerWidth;\n    const availableOutsideRight = availableSpace.right - triggerWidth;\n    const fitsInCenter = availableOutsideLeft >= spillOver && availableOutsideRight >= spillOver;\n    if (fitsInCenter) {\n      left = -spillOver;\n    }\n  }\n  const dropUp = availableSpace.below < dropdown.offsetHeight && availableSpace.above > availableSpace.below;\n  const availableHeight = dropUp ? availableSpace.above : availableSpace.below;\n  // Try and crop the bottom item when all options can't be displayed, affordance for \"there's more\"\n  const croppedHeight = stretchHeight ? availableHeight : Math.floor(availableHeight / 31) * 31 + 16;\n  return {\n    dropUp,\n    dropLeft,\n    left: left === null ? 'auto' : `${left}px`,\n    height: `${croppedHeight}px`,\n    width: `${width}px`\n  };\n};\nexport const getInteriorDropdownPosition = (trigger, dropdown, overflowParents, isMobile) => {\n  const availableSpace = getInteriorAvailableSpace(trigger, dropdown, overflowParents, isMobile);\n  const {\n    bottom: triggerBottom,\n    top: triggerTop,\n    width: triggerWidth\n  } = trigger.getBoundingClientRect();\n  const {\n    top: parentDropdownTop,\n    height: parentDropdownHeight\n  } = getClosestParentDimensions(trigger);\n  let dropLeft;\n  let width = dropdown.getBoundingClientRect().width;\n  const top = triggerTop - parentDropdownTop;\n  if (width <= availableSpace.right) {\n    dropLeft = false;\n  } else if (width <= availableSpace.left) {\n    dropLeft = true;\n  } else {\n    dropLeft = availableSpace.left > availableSpace.right;\n    width = Math.max(availableSpace.left, availableSpace.right);\n  }\n  const left = dropLeft ? 0 - width : triggerWidth;\n  const dropUp = availableSpace.below < dropdown.offsetHeight && availableSpace.above > availableSpace.below;\n  const bottom = dropUp ? parentDropdownTop + parentDropdownHeight - triggerBottom : 0;\n  const availableHeight = dropUp ? availableSpace.above : availableSpace.below;\n  // Try and crop the bottom item when all options can't be displayed, affordance for \"there's more\"\n  const croppedHeight = Math.floor(availableHeight / 31) * 31 + 16;\n  return {\n    dropUp,\n    dropLeft,\n    height: `${croppedHeight}px`,\n    width: `${width}px`,\n    top: `${top}px`,\n    bottom: `${bottom}px`,\n    left: `${left}px`\n  };\n};\nexport const calculatePosition = (dropdownElement, triggerElement, verticalContainerElement, interior, expandToViewport, preferCenter, stretchWidth, stretchHeight, isMobile, minWidth) => {\n  // cleaning previously assigned values,\n  // so that they are not reused in case of screen resize and similar events\n  verticalContainerElement.style.maxHeight = '';\n  dropdownElement.style.width = '';\n  dropdownElement.style.top = '';\n  dropdownElement.style.bottom = '';\n  dropdownElement.style.left = '';\n  dropdownElement.classList.remove(styles['dropdown-drop-left']);\n  dropdownElement.classList.remove(styles['dropdown-drop-right']);\n  dropdownElement.classList.remove(styles['dropdown-drop-up']);\n  const overflowParents = getOverflowParentDimensions(dropdownElement, interior, expandToViewport, stretchHeight);\n  const position = interior ? getInteriorDropdownPosition(triggerElement, dropdownElement, overflowParents, isMobile) : getDropdownPosition(triggerElement, dropdownElement, overflowParents, minWidth, preferCenter, stretchWidth, stretchHeight, isMobile);\n  const triggerBox = triggerElement.getBoundingClientRect();\n  return [position, triggerBox];\n};","map":{"version":3,"names":["getOverflowParents","getOverflowParentDimensions","styles","AVAILABLE_SPACE_RESERVE_DEFAULT","AVAILABLE_SPACE_RESERVE_MOBILE_VERTICAL","AVAILABLE_SPACE_RESERVE_MOBILE_HORIZONTAL","getClosestParentDimensions","element","parents","map","el","height","width","top","left","getBoundingClientRect","shift","getAvailableSpace","trigger","dropdown","overflowParents","stretchWidth","arguments","length","undefined","stretchHeight","isMobile","availableSpaceReserveVertical","availableSpaceReserveHorizontal","bottom","triggerBottom","triggerLeft","right","triggerRight","reduce","_ref","overflowParent","above","below","offsetTop","currentAbove","offsetHeight","currentBelow","currentLeft","currentRight","Math","min","Number","MAX_VALUE","getInteriorAvailableSpace","AVAILABLE_SPACE_RESERVE_VERTICAL","AVAILABLE_SPACE_RESERVE_HORIZONTAL","triggerTop","_ref2","getDropdownPosition","minWidth","preferCenter","availableSpace","triggerWidth","requiredWidth","idealWidth","max","dropLeft","spillOver","availableOutsideLeft","availableOutsideRight","fitsInCenter","dropUp","availableHeight","croppedHeight","floor","getInteriorDropdownPosition","parentDropdownTop","parentDropdownHeight","calculatePosition","dropdownElement","triggerElement","verticalContainerElement","interior","expandToViewport","style","maxHeight","classList","remove","position","triggerBox"],"sources":["/Users/ndwang/Documents/projects/face2alias_aws/node_modules/@cloudscape-design/components/internal/components/dropdown/lib/default/internal/components/dropdown/dropdown-fit-handler.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Dimensions, getOverflowParents, getOverflowParentDimensions } from '../../utils/scrollable-containers';\nimport styles from './styles.css.js';\n\nconst AVAILABLE_SPACE_RESERVE_DEFAULT = 50;\nconst AVAILABLE_SPACE_RESERVE_MOBILE_VERTICAL = 19; // 50 - 31\nconst AVAILABLE_SPACE_RESERVE_MOBILE_HORIZONTAL = 20;\n\ninterface AvailableSpace {\n  above: number;\n  below: number;\n  left: number;\n  right: number;\n}\nexport interface DropdownPosition {\n  height: string;\n  width: string;\n  dropUp: boolean;\n  dropLeft: boolean;\n  left: string;\n}\nexport interface InteriorDropdownPosition extends DropdownPosition {\n  bottom: string;\n  top: string;\n}\n\nconst getClosestParentDimensions = (element: HTMLElement): any => {\n  const parents = getOverflowParents(element).map(el => {\n    const { height, width, top, left } = el.getBoundingClientRect();\n    return {\n      height,\n      width,\n      top,\n      left,\n    };\n  });\n\n  return parents.shift();\n};\n\nexport const getAvailableSpace = (\n  trigger: HTMLElement,\n  dropdown: HTMLElement,\n  overflowParents: ReadonlyArray<Dimensions>,\n  stretchWidth = false,\n  stretchHeight = false,\n  isMobile?: boolean\n): AvailableSpace => {\n  const availableSpaceReserveVertical = stretchHeight\n    ? 0\n    : isMobile\n    ? AVAILABLE_SPACE_RESERVE_MOBILE_VERTICAL\n    : AVAILABLE_SPACE_RESERVE_DEFAULT;\n  const availableSpaceReserveHorizontal = stretchWidth\n    ? 0\n    : isMobile\n    ? AVAILABLE_SPACE_RESERVE_MOBILE_HORIZONTAL\n    : AVAILABLE_SPACE_RESERVE_DEFAULT;\n  const { bottom: triggerBottom, left: triggerLeft, right: triggerRight } = trigger.getBoundingClientRect();\n\n  return overflowParents.reduce(\n    ({ above, below, left, right }, overflowParent) => {\n      const offsetTop = triggerBottom - overflowParent.top;\n      const currentAbove = offsetTop - trigger.offsetHeight - availableSpaceReserveVertical;\n      const currentBelow = overflowParent.height - offsetTop - availableSpaceReserveVertical;\n      const currentLeft = triggerRight - overflowParent.left - availableSpaceReserveHorizontal;\n      const currentRight = overflowParent.left + overflowParent.width - triggerLeft - availableSpaceReserveHorizontal;\n\n      return {\n        above: Math.min(above, currentAbove),\n        below: Math.min(below, currentBelow),\n        left: Math.min(left, currentLeft),\n        right: Math.min(right, currentRight),\n      };\n    },\n    { above: Number.MAX_VALUE, below: Number.MAX_VALUE, left: Number.MAX_VALUE, right: Number.MAX_VALUE }\n  );\n};\n\nexport const getInteriorAvailableSpace = (\n  trigger: HTMLElement,\n  dropdown: HTMLElement,\n  overflowParents: ReadonlyArray<Dimensions>,\n  isMobile?: boolean\n): AvailableSpace => {\n  const AVAILABLE_SPACE_RESERVE_VERTICAL = isMobile\n    ? AVAILABLE_SPACE_RESERVE_MOBILE_VERTICAL\n    : AVAILABLE_SPACE_RESERVE_DEFAULT;\n  const AVAILABLE_SPACE_RESERVE_HORIZONTAL = isMobile\n    ? AVAILABLE_SPACE_RESERVE_MOBILE_HORIZONTAL\n    : AVAILABLE_SPACE_RESERVE_DEFAULT;\n  const {\n    bottom: triggerBottom,\n    top: triggerTop,\n    left: triggerLeft,\n    right: triggerRight,\n  } = trigger.getBoundingClientRect();\n\n  return overflowParents.reduce(\n    ({ above, below, left, right }, overflowParent) => {\n      const currentAbove = triggerBottom - overflowParent.top - AVAILABLE_SPACE_RESERVE_VERTICAL;\n      const currentBelow = overflowParent.height - triggerTop + overflowParent.top - AVAILABLE_SPACE_RESERVE_VERTICAL;\n      const currentLeft = triggerLeft - overflowParent.left - AVAILABLE_SPACE_RESERVE_HORIZONTAL;\n      const currentRight =\n        overflowParent.left + overflowParent.width - triggerRight - AVAILABLE_SPACE_RESERVE_HORIZONTAL;\n\n      return {\n        above: Math.min(above, currentAbove),\n        below: Math.min(below, currentBelow),\n        left: Math.min(left, currentLeft),\n        right: Math.min(right, currentRight),\n      };\n    },\n    { above: Number.MAX_VALUE, below: Number.MAX_VALUE, left: Number.MAX_VALUE, right: Number.MAX_VALUE }\n  );\n};\n\nexport const getDropdownPosition = (\n  trigger: HTMLElement,\n  dropdown: HTMLElement,\n  overflowParents: ReadonlyArray<Dimensions>,\n  minWidth?: number,\n  preferCenter = false,\n  stretchWidth = false,\n  stretchHeight = false,\n  isMobile?: boolean\n): DropdownPosition => {\n  const availableSpace = getAvailableSpace(trigger, dropdown, overflowParents, stretchWidth, stretchHeight, isMobile);\n  const triggerWidth = trigger.getBoundingClientRect().width;\n  minWidth = minWidth ? Math.min(triggerWidth, minWidth) : triggerWidth;\n  const requiredWidth = dropdown.getBoundingClientRect().width;\n  // dropdown should not be smaller than the trigger\n  const idealWidth = Math.max(requiredWidth, minWidth);\n\n  let dropLeft: boolean;\n  let left: number | null = null;\n  let width = idealWidth;\n\n  //1. Can it be positioned with ideal width to the right?\n  if (idealWidth <= availableSpace.right) {\n    dropLeft = false;\n    //2. Can it be positioned with ideal width to the left?\n  } else if (idealWidth <= availableSpace.left) {\n    dropLeft = true;\n    //3. Fit into biggest available space either on left or right\n  } else {\n    dropLeft = availableSpace.left > availableSpace.right;\n    width = Math.max(availableSpace.left, availableSpace.right, minWidth);\n  }\n\n  if (preferCenter) {\n    const spillOver = (idealWidth - triggerWidth) / 2;\n\n    // availableSpace always includes the trigger width, but we want to exclude that\n    const availableOutsideLeft = availableSpace.left - triggerWidth;\n    const availableOutsideRight = availableSpace.right - triggerWidth;\n\n    const fitsInCenter = availableOutsideLeft >= spillOver && availableOutsideRight >= spillOver;\n    if (fitsInCenter) {\n      left = -spillOver;\n    }\n  }\n\n  const dropUp = availableSpace.below < dropdown.offsetHeight && availableSpace.above > availableSpace.below;\n  const availableHeight = dropUp ? availableSpace.above : availableSpace.below;\n  // Try and crop the bottom item when all options can't be displayed, affordance for \"there's more\"\n  const croppedHeight = stretchHeight ? availableHeight : Math.floor(availableHeight / 31) * 31 + 16;\n\n  return {\n    dropUp,\n    dropLeft,\n    left: left === null ? 'auto' : `${left}px`,\n    height: `${croppedHeight}px`,\n    width: `${width}px`,\n  };\n};\n\nexport const getInteriorDropdownPosition = (\n  trigger: HTMLElement,\n  dropdown: HTMLElement,\n  overflowParents: ReadonlyArray<Dimensions>,\n  isMobile?: boolean\n): InteriorDropdownPosition => {\n  const availableSpace = getInteriorAvailableSpace(trigger, dropdown, overflowParents, isMobile);\n  const { bottom: triggerBottom, top: triggerTop, width: triggerWidth } = trigger.getBoundingClientRect();\n  const { top: parentDropdownTop, height: parentDropdownHeight } = getClosestParentDimensions(trigger);\n\n  let dropLeft;\n\n  let width = dropdown.getBoundingClientRect().width;\n  const top = triggerTop - parentDropdownTop;\n  if (width <= availableSpace.right) {\n    dropLeft = false;\n  } else if (width <= availableSpace.left) {\n    dropLeft = true;\n  } else {\n    dropLeft = availableSpace.left > availableSpace.right;\n    width = Math.max(availableSpace.left, availableSpace.right);\n  }\n\n  const left = dropLeft ? 0 - width : triggerWidth;\n\n  const dropUp = availableSpace.below < dropdown.offsetHeight && availableSpace.above > availableSpace.below;\n  const bottom = dropUp ? parentDropdownTop + parentDropdownHeight - triggerBottom : 0;\n  const availableHeight = dropUp ? availableSpace.above : availableSpace.below;\n  // Try and crop the bottom item when all options can't be displayed, affordance for \"there's more\"\n  const croppedHeight = Math.floor(availableHeight / 31) * 31 + 16;\n\n  return {\n    dropUp,\n    dropLeft,\n    height: `${croppedHeight}px`,\n    width: `${width}px`,\n    top: `${top}px`,\n    bottom: `${bottom}px`,\n    left: `${left}px`,\n  };\n};\n\nexport const calculatePosition = (\n  dropdownElement: HTMLDivElement,\n  triggerElement: HTMLDivElement,\n  verticalContainerElement: HTMLDivElement,\n  interior: boolean,\n  expandToViewport: boolean,\n  preferCenter: boolean,\n  stretchWidth: boolean,\n  stretchHeight: boolean,\n  isMobile: boolean,\n  minWidth?: number\n): [DropdownPosition, DOMRect] => {\n  // cleaning previously assigned values,\n  // so that they are not reused in case of screen resize and similar events\n  verticalContainerElement.style.maxHeight = '';\n  dropdownElement.style.width = '';\n  dropdownElement.style.top = '';\n  dropdownElement.style.bottom = '';\n  dropdownElement.style.left = '';\n\n  dropdownElement.classList.remove(styles['dropdown-drop-left']);\n  dropdownElement.classList.remove(styles['dropdown-drop-right']);\n  dropdownElement.classList.remove(styles['dropdown-drop-up']);\n\n  const overflowParents = getOverflowParentDimensions(dropdownElement, interior, expandToViewport, stretchHeight);\n  const position = interior\n    ? getInteriorDropdownPosition(triggerElement, dropdownElement, overflowParents, isMobile)\n    : getDropdownPosition(\n        triggerElement,\n        dropdownElement,\n        overflowParents,\n        minWidth,\n        preferCenter,\n        stretchWidth,\n        stretchHeight,\n        isMobile\n      );\n  const triggerBox = triggerElement.getBoundingClientRect();\n  return [position, triggerBox];\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}