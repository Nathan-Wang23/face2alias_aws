{"ast":null,"code":"var _jsxFileName = \"/Users/nelaurar/Desktop/proj /my-app/src/component/Home/ImageBox.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageBox = _ref => {\n  _s();\n  let {\n    image_base64,\n    boxesCoordinates,\n    width,\n    height,\n    color,\n    aliasesImg\n  } = _ref;\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    if (!image_base64 || !boxesCoordinates || boxesCoordinates.length === 0) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const image = new Image();\n    image.src = `${image_base64}`;\n    image.onload = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height); // make sure is clean \n      ctx.drawImage(image, 0, 0, width, height);\n\n      // Draw boxes on the image based on the coordinates\n      for (let i = 0; i < boxesCoordinates.length; i++) {\n        // const {boxesCoordinates, aliasesImg} = boxWithName;// adding the alias \n\n        ctx.strokeStyle = color[i];\n        ctx.lineWidth = 2;\n        ctx.strokeRect(boxesCoordinates[i].x, boxesCoordinates[i].y, boxesCoordinates[i].width, boxesCoordinates[i].height); // draw the box\n\n        ctx.font = \"16px Arial\"; // set to aws font\n        ctx.fillStyle = color[i];\n        ctx.fillText(aliasesImg, boxesCoordinates[i].x + 5, boxesCoordinates[i].y + 20);\n      }\n    };\n  }, [image_base64, boxesCoordinates]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: width,\n    height: height\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n};\n_s(ImageBox, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = ImageBox;\nexport default ImageBox;\nvar _c;\n$RefreshReg$(_c, \"ImageBox\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","ImageBox","_ref","_s","image_base64","boxesCoordinates","width","height","color","aliasesImg","canvasRef","length","canvas","current","ctx","getContext","image","Image","src","onload","clearRect","drawImage","i","strokeStyle","lineWidth","strokeRect","x","y","font","fillStyle","fillText","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nelaurar/Desktop/proj /my-app/src/component/Home/ImageBox.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\n\nconst ImageBox = ({ image_base64, boxesCoordinates, width, height, color, aliasesImg}) => {\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    if (!image_base64 || !boxesCoordinates || boxesCoordinates.length === 0) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n\n    const image = new Image();\n    image.src = `${image_base64}`;\n    image.onload = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height); // make sure is clean \n      ctx.drawImage(image, 0, 0, width, height);\n\n      // Draw boxes on the image based on the coordinates\n      for (let i = 0; i < boxesCoordinates.length; i++) {\n\n        // const {boxesCoordinates, aliasesImg} = boxWithName;// adding the alias \n\n        ctx.strokeStyle = color[i];\n        ctx.lineWidth = 2;\n        ctx.strokeRect(boxesCoordinates[i].x, boxesCoordinates[i].y, boxesCoordinates[i].width, boxesCoordinates[i].height); // draw the box\n      \n        ctx.font = \"16px Arial\"; // set to aws font\n        ctx.fillStyle = color[i]; \n        ctx.fillText(aliasesImg, boxesCoordinates[i].x + 5, boxesCoordinates[i].y + 20);\n    }\n    };\n  }, [image_base64, boxesCoordinates]);\n\n  return <canvas ref={canvasRef} width={width} height={height} />;\n};\n\nexport default ImageBox;\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,QAAQ,GAAGC,IAAA,IAAyE;EAAAC,EAAA;EAAA,IAAxE;IAAEC,YAAY;IAAEC,gBAAgB;IAAEC,KAAK;IAAEC,MAAM;IAAEC,KAAK;IAAEC;EAAU,CAAC,GAAAP,IAAA;EACnF,MAAMQ,SAAS,GAAGb,MAAM,CAAC,IAAI,CAAC;EAE9BC,SAAS,CAAC,MAAM;IACd,IAAI,CAACM,YAAY,IAAI,CAACC,gBAAgB,IAAIA,gBAAgB,CAACM,MAAM,KAAK,CAAC,EAAE;IAEzE,MAAMC,MAAM,GAAGF,SAAS,CAACG,OAAO;IAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IAEnC,MAAMC,KAAK,GAAG,IAAIC,KAAK,CAAC,CAAC;IACzBD,KAAK,CAACE,GAAG,GAAI,GAAEd,YAAa,EAAC;IAC7BY,KAAK,CAACG,MAAM,GAAG,MAAM;MACnBL,GAAG,CAACM,SAAS,CAAC,CAAC,EAAE,CAAC,EAAER,MAAM,CAACN,KAAK,EAAEM,MAAM,CAACL,MAAM,CAAC,CAAC,CAAC;MAClDO,GAAG,CAACO,SAAS,CAACL,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEV,KAAK,EAAEC,MAAM,CAAC;;MAEzC;MACA,KAAK,IAAIe,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGjB,gBAAgB,CAACM,MAAM,EAAEW,CAAC,EAAE,EAAE;QAEhD;;QAEAR,GAAG,CAACS,WAAW,GAAGf,KAAK,CAACc,CAAC,CAAC;QAC1BR,GAAG,CAACU,SAAS,GAAG,CAAC;QACjBV,GAAG,CAACW,UAAU,CAACpB,gBAAgB,CAACiB,CAAC,CAAC,CAACI,CAAC,EAAErB,gBAAgB,CAACiB,CAAC,CAAC,CAACK,CAAC,EAAEtB,gBAAgB,CAACiB,CAAC,CAAC,CAAChB,KAAK,EAAED,gBAAgB,CAACiB,CAAC,CAAC,CAACf,MAAM,CAAC,CAAC,CAAC;;QAErHO,GAAG,CAACc,IAAI,GAAG,YAAY,CAAC,CAAC;QACzBd,GAAG,CAACe,SAAS,GAAGrB,KAAK,CAACc,CAAC,CAAC;QACxBR,GAAG,CAACgB,QAAQ,CAACrB,UAAU,EAAEJ,gBAAgB,CAACiB,CAAC,CAAC,CAACI,CAAC,GAAG,CAAC,EAAErB,gBAAgB,CAACiB,CAAC,CAAC,CAACK,CAAC,GAAG,EAAE,CAAC;MACnF;IACA,CAAC;EACH,CAAC,EAAE,CAACvB,YAAY,EAAEC,gBAAgB,CAAC,CAAC;EAEpC,oBAAOL,OAAA;IAAQ+B,GAAG,EAAErB,SAAU;IAACJ,KAAK,EAAEA,KAAM;IAACC,MAAM,EAAEA;EAAO;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACjE,CAAC;AAAChC,EAAA,CAhCIF,QAAQ;AAAAmC,EAAA,GAARnC,QAAQ;AAkCd,eAAeA,QAAQ;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}