{"ast":null,"code":"const ARROW_OFFSET = 12;\nexport const PRIORITY_MAPPING = {\n  top: ['top-center', 'top-right', 'top-left', 'bottom-center', 'bottom-right', 'bottom-left', 'right-top', 'right-bottom', 'left-top', 'left-bottom'],\n  bottom: ['bottom-center', 'bottom-right', 'bottom-left', 'top-center', 'top-right', 'top-left', 'right-top', 'right-bottom', 'left-top', 'left-bottom'],\n  left: ['left-top', 'left-bottom', 'right-top', 'right-bottom', 'bottom-center', 'top-center', 'bottom-left', 'top-left', 'bottom-right', 'top-right'],\n  right: ['right-top', 'right-bottom', 'left-top', 'left-bottom', 'bottom-center', 'top-center', 'bottom-right', 'top-right', 'bottom-left', 'top-left']\n};\nconst RECTANGLE_CALCULATIONS = {\n  'top-center': _ref => {\n    let {\n      body,\n      trigger,\n      arrow\n    } = _ref;\n    return {\n      top: trigger.top - body.height - arrow.height,\n      left: trigger.left + trigger.width / 2 - body.width / 2,\n      width: body.width,\n      height: body.height\n    };\n  },\n  'top-right': _ref2 => {\n    let {\n      body,\n      trigger,\n      arrow\n    } = _ref2;\n    return {\n      top: trigger.top - body.height - arrow.height,\n      left: trigger.left,\n      width: body.width,\n      height: body.height\n    };\n  },\n  'top-left': _ref3 => {\n    let {\n      body,\n      trigger,\n      arrow\n    } = _ref3;\n    return {\n      top: trigger.top - body.height - arrow.height,\n      left: trigger.left + trigger.width - body.width,\n      width: body.width,\n      height: body.height\n    };\n  },\n  'bottom-center': _ref4 => {\n    let {\n      body,\n      trigger,\n      arrow\n    } = _ref4;\n    return {\n      top: trigger.top + trigger.height + arrow.height,\n      left: trigger.left + trigger.width / 2 - body.width / 2,\n      width: body.width,\n      height: body.height\n    };\n  },\n  'bottom-right': _ref5 => {\n    let {\n      body,\n      trigger,\n      arrow\n    } = _ref5;\n    return {\n      top: trigger.top + trigger.height + arrow.height,\n      left: trigger.left,\n      width: body.width,\n      height: body.height\n    };\n  },\n  'bottom-left': _ref6 => {\n    let {\n      body,\n      trigger,\n      arrow\n    } = _ref6;\n    return {\n      top: trigger.top + trigger.height + arrow.height,\n      left: trigger.left + trigger.width - body.width,\n      width: body.width,\n      height: body.height\n    };\n  },\n  'right-top': _ref7 => {\n    let {\n      body,\n      trigger,\n      arrow\n    } = _ref7;\n    return {\n      top: trigger.top + trigger.height / 2 - ARROW_OFFSET - arrow.height,\n      left: trigger.left + trigger.width + arrow.height,\n      width: body.width,\n      height: body.height\n    };\n  },\n  'right-bottom': _ref8 => {\n    let {\n      body,\n      trigger,\n      arrow\n    } = _ref8;\n    return {\n      top: trigger.top + trigger.height / 2 - body.height + ARROW_OFFSET + arrow.height,\n      left: trigger.left + trigger.width + arrow.height,\n      width: body.width,\n      height: body.height\n    };\n  },\n  'left-top': _ref9 => {\n    let {\n      body,\n      trigger,\n      arrow\n    } = _ref9;\n    return {\n      top: trigger.top + trigger.height / 2 - ARROW_OFFSET - arrow.height,\n      left: trigger.left - body.width - arrow.height,\n      width: body.width,\n      height: body.height\n    };\n  },\n  'left-bottom': _ref10 => {\n    let {\n      body,\n      trigger,\n      arrow\n    } = _ref10;\n    return {\n      top: trigger.top + trigger.height / 2 - body.height + ARROW_OFFSET + arrow.height,\n      left: trigger.left - body.width - arrow.height,\n      width: body.width,\n      height: body.height\n    };\n  }\n};\n/**\n * Returns whether one rectangle fits in another.\n */\nfunction canRectFit(inner, outer) {\n  return inner.left >= outer.left && inner.top >= outer.top && inner.left + inner.width <= outer.left + outer.width && inner.top + inner.height <= outer.top + outer.height;\n}\nfunction fitIntoContainer(inner, outer) {\n  let {\n    left,\n    width,\n    top,\n    height\n  } = inner;\n  // Adjust left boundary.\n  if (left < outer.left) {\n    width = left + width - outer.left;\n    left = outer.left;\n  }\n  // Adjust right boundary.\n  else if (left + width > outer.left + outer.width) {\n    width = outer.left + outer.width - left;\n  }\n  // Adjust top boundary.\n  if (top < outer.top) {\n    height = top + height - outer.top;\n    top = outer.top;\n  }\n  // Adjust bottom boundary.\n  else if (top + height > outer.top + outer.height) {\n    height = outer.top + outer.height - top;\n  }\n  return {\n    left,\n    width,\n    top,\n    height\n  };\n}\nfunction getLargestRect(rect1, rect2) {\n  const area1 = rect1.height * rect1.width;\n  const area2 = rect2.height * rect2.width;\n  return area1 >= area2 ? rect1 : rect2;\n}\n/**\n * Returns the area of the intersection of passed in rectangles or a null, if there is no intersection\n */\nexport function intersectRectangles(rectangles) {\n  let boundingOffset = null;\n  for (const currentRect of rectangles) {\n    if (!boundingOffset) {\n      boundingOffset = currentRect;\n      continue;\n    }\n    const left = Math.max(boundingOffset.left, currentRect.left);\n    const top = Math.max(boundingOffset.top, currentRect.top);\n    const right = Math.min(boundingOffset.left + boundingOffset.width, currentRect.left + currentRect.width);\n    const bottom = Math.min(boundingOffset.top + boundingOffset.height, currentRect.top + currentRect.height);\n    if (right < left || bottom < top) {\n      return null;\n    }\n    boundingOffset = {\n      left,\n      top,\n      width: right - left,\n      height: bottom - top\n    };\n  }\n  return boundingOffset && boundingOffset.height * boundingOffset.width;\n}\n/**\n * A functions that returns the correct popover position based on screen dimensions.\n */\nexport function calculatePosition(preferred, trigger, arrow, body, container, viewport,\n// the popover is only bound by the viewport if it is rendered in a portal\nrenderWithPortal) {\n  let bestPositionOutsideViewport = null;\n  let largestArea = 0;\n  // Attempt to position the popover based on the priority list for this position,\n  // trying to fit it inside the container and inside the viewport.\n  for (const internalPosition of PRIORITY_MAPPING[preferred]) {\n    const boundingOffset = RECTANGLE_CALCULATIONS[internalPosition]({\n      body,\n      trigger,\n      arrow\n    });\n    const fitsInContainer = renderWithPortal || canRectFit(boundingOffset, container);\n    const fitsInViewport = canRectFit(boundingOffset, viewport);\n    if (fitsInContainer && fitsInViewport) {\n      return {\n        internalPosition,\n        boundingOffset\n      };\n    }\n    const boundingRectangles = [boundingOffset, viewport];\n    if (!renderWithPortal) {\n      boundingRectangles.push(container);\n    }\n    const availableArea = intersectRectangles(boundingRectangles);\n    if (availableArea && availableArea > largestArea) {\n      bestPositionOutsideViewport = {\n        internalPosition,\n        boundingOffset\n      };\n      largestArea = availableArea;\n    }\n  }\n  // Use best possible placement.\n  const internalPosition = (bestPositionOutsideViewport === null || bestPositionOutsideViewport === void 0 ? void 0 : bestPositionOutsideViewport.internalPosition) || 'right-top';\n  // Get default rect for that placement.\n  const defaultOffset = RECTANGLE_CALCULATIONS[internalPosition]({\n    body,\n    trigger,\n    arrow\n  });\n  // Get largest possible rect that fits into viewport or container.\n  const optimisedOffset = fitIntoContainer(defaultOffset, renderWithPortal ? viewport : getLargestRect(container, viewport));\n  // If largest possible rect is smaller than original - set body scroll.\n  const scrollable = optimisedOffset.height < defaultOffset.height;\n  return {\n    internalPosition,\n    boundingOffset: optimisedOffset,\n    scrollable\n  };\n}","map":{"version":3,"names":["ARROW_OFFSET","PRIORITY_MAPPING","top","bottom","left","right","RECTANGLE_CALCULATIONS","_ref","body","trigger","arrow","height","width","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","canRectFit","inner","outer","fitIntoContainer","getLargestRect","rect1","rect2","area1","area2","intersectRectangles","rectangles","boundingOffset","currentRect","Math","max","min","calculatePosition","preferred","container","viewport","renderWithPortal","bestPositionOutsideViewport","largestArea","internalPosition","fitsInContainer","fitsInViewport","boundingRectangles","push","availableArea","defaultOffset","optimisedOffset","scrollable"],"sources":["/Users/ndwang/Documents/projects/face2alias_aws/node_modules/@cloudscape-design/components/popover/utils/lib/default/popover/utils/positions.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { PopoverProps, InternalPosition, BoundingOffset, BoundingBox } from '../interfaces';\n\n// A structure describing how the popover should be positioned\nexport interface CalculatePosition {\n  scrollable?: boolean;\n  internalPosition: InternalPosition;\n  boundingOffset: BoundingOffset;\n}\n\ninterface ElementGroup {\n  body: BoundingBox;\n  trigger: BoundingOffset;\n  arrow: BoundingBox;\n}\n\nconst ARROW_OFFSET = 12;\n\nexport const PRIORITY_MAPPING: Record<PopoverProps.Position, InternalPosition[]> = {\n  top: [\n    'top-center',\n    'top-right',\n    'top-left',\n    'bottom-center',\n    'bottom-right',\n    'bottom-left',\n    'right-top',\n    'right-bottom',\n    'left-top',\n    'left-bottom',\n  ],\n  bottom: [\n    'bottom-center',\n    'bottom-right',\n    'bottom-left',\n    'top-center',\n    'top-right',\n    'top-left',\n    'right-top',\n    'right-bottom',\n    'left-top',\n    'left-bottom',\n  ],\n  left: [\n    'left-top',\n    'left-bottom',\n    'right-top',\n    'right-bottom',\n    'bottom-center',\n    'top-center',\n    'bottom-left',\n    'top-left',\n    'bottom-right',\n    'top-right',\n  ],\n  right: [\n    'right-top',\n    'right-bottom',\n    'left-top',\n    'left-bottom',\n    'bottom-center',\n    'top-center',\n    'bottom-right',\n    'top-right',\n    'bottom-left',\n    'top-left',\n  ],\n};\n\nconst RECTANGLE_CALCULATIONS: Record<InternalPosition, (r: ElementGroup) => BoundingOffset> = {\n  'top-center': ({ body, trigger, arrow }) => {\n    return {\n      top: trigger.top - body.height - arrow.height,\n      left: trigger.left + trigger.width / 2 - body.width / 2,\n      width: body.width,\n      height: body.height,\n    };\n  },\n  'top-right': ({ body, trigger, arrow }) => {\n    return {\n      top: trigger.top - body.height - arrow.height,\n      left: trigger.left,\n      width: body.width,\n      height: body.height,\n    };\n  },\n  'top-left': ({ body, trigger, arrow }) => {\n    return {\n      top: trigger.top - body.height - arrow.height,\n      left: trigger.left + trigger.width - body.width,\n      width: body.width,\n      height: body.height,\n    };\n  },\n  'bottom-center': ({ body, trigger, arrow }) => {\n    return {\n      top: trigger.top + trigger.height + arrow.height,\n      left: trigger.left + trigger.width / 2 - body.width / 2,\n      width: body.width,\n      height: body.height,\n    };\n  },\n  'bottom-right': ({ body, trigger, arrow }) => {\n    return {\n      top: trigger.top + trigger.height + arrow.height,\n      left: trigger.left,\n      width: body.width,\n      height: body.height,\n    };\n  },\n  'bottom-left': ({ body, trigger, arrow }) => {\n    return {\n      top: trigger.top + trigger.height + arrow.height,\n      left: trigger.left + trigger.width - body.width,\n      width: body.width,\n      height: body.height,\n    };\n  },\n  'right-top': ({ body, trigger, arrow }) => {\n    return {\n      top: trigger.top + trigger.height / 2 - ARROW_OFFSET - arrow.height,\n      left: trigger.left + trigger.width + arrow.height,\n      width: body.width,\n      height: body.height,\n    };\n  },\n  'right-bottom': ({ body, trigger, arrow }) => {\n    return {\n      top: trigger.top + trigger.height / 2 - body.height + ARROW_OFFSET + arrow.height,\n      left: trigger.left + trigger.width + arrow.height,\n      width: body.width,\n      height: body.height,\n    };\n  },\n  'left-top': ({ body, trigger, arrow }) => {\n    return {\n      top: trigger.top + trigger.height / 2 - ARROW_OFFSET - arrow.height,\n      left: trigger.left - body.width - arrow.height,\n      width: body.width,\n      height: body.height,\n    };\n  },\n  'left-bottom': ({ body, trigger, arrow }) => {\n    return {\n      top: trigger.top + trigger.height / 2 - body.height + ARROW_OFFSET + arrow.height,\n      left: trigger.left - body.width - arrow.height,\n      width: body.width,\n      height: body.height,\n    };\n  },\n};\n\n/**\n * Returns whether one rectangle fits in another.\n */\nfunction canRectFit(inner: BoundingOffset, outer: BoundingOffset): boolean {\n  return (\n    inner.left >= outer.left &&\n    inner.top >= outer.top &&\n    inner.left + inner.width <= outer.left + outer.width &&\n    inner.top + inner.height <= outer.top + outer.height\n  );\n}\n\nfunction fitIntoContainer(inner: BoundingOffset, outer: BoundingOffset): BoundingOffset {\n  let { left, width, top, height } = inner;\n\n  // Adjust left boundary.\n  if (left < outer.left) {\n    width = left + width - outer.left;\n    left = outer.left;\n  }\n  // Adjust right boundary.\n  else if (left + width > outer.left + outer.width) {\n    width = outer.left + outer.width - left;\n  }\n  // Adjust top boundary.\n  if (top < outer.top) {\n    height = top + height - outer.top;\n    top = outer.top;\n  }\n  // Adjust bottom boundary.\n  else if (top + height > outer.top + outer.height) {\n    height = outer.top + outer.height - top;\n  }\n\n  return { left, width, top, height };\n}\n\nfunction getLargestRect(rect1: BoundingOffset, rect2: BoundingOffset): BoundingOffset {\n  const area1 = rect1.height * rect1.width;\n  const area2 = rect2.height * rect2.width;\n  return area1 >= area2 ? rect1 : rect2;\n}\n\n/**\n * Returns the area of the intersection of passed in rectangles or a null, if there is no intersection\n */\nexport function intersectRectangles(rectangles: BoundingOffset[]): number | null {\n  let boundingOffset: BoundingOffset | null = null;\n  for (const currentRect of rectangles) {\n    if (!boundingOffset) {\n      boundingOffset = currentRect;\n      continue;\n    }\n    const left = Math.max(boundingOffset.left, currentRect.left);\n    const top = Math.max(boundingOffset.top, currentRect.top);\n    const right = Math.min(boundingOffset.left + boundingOffset.width, currentRect.left + currentRect.width);\n    const bottom = Math.min(boundingOffset.top + boundingOffset.height, currentRect.top + currentRect.height);\n    if (right < left || bottom < top) {\n      return null;\n    }\n    boundingOffset = {\n      left,\n      top,\n      width: right - left,\n      height: bottom - top,\n    };\n  }\n  return boundingOffset && boundingOffset.height * boundingOffset.width;\n}\n\n/**\n * A functions that returns the correct popover position based on screen dimensions.\n */\nexport function calculatePosition(\n  preferred: PopoverProps.Position,\n  trigger: BoundingOffset,\n  arrow: BoundingBox,\n  body: BoundingBox,\n  container: BoundingOffset,\n  viewport: BoundingOffset,\n  // the popover is only bound by the viewport if it is rendered in a portal\n  renderWithPortal?: boolean\n): CalculatePosition {\n  let bestPositionOutsideViewport: CalculatePosition | null = null;\n  let largestArea = 0;\n\n  // Attempt to position the popover based on the priority list for this position,\n  // trying to fit it inside the container and inside the viewport.\n  for (const internalPosition of PRIORITY_MAPPING[preferred]) {\n    const boundingOffset = RECTANGLE_CALCULATIONS[internalPosition]({ body, trigger, arrow });\n    const fitsInContainer = renderWithPortal || canRectFit(boundingOffset, container);\n    const fitsInViewport = canRectFit(boundingOffset, viewport);\n    if (fitsInContainer && fitsInViewport) {\n      return { internalPosition, boundingOffset };\n    }\n    const boundingRectangles = [boundingOffset, viewport];\n    if (!renderWithPortal) {\n      boundingRectangles.push(container);\n    }\n    const availableArea = intersectRectangles(boundingRectangles);\n    if (availableArea && availableArea > largestArea) {\n      bestPositionOutsideViewport = { internalPosition, boundingOffset };\n      largestArea = availableArea;\n    }\n  }\n\n  // Use best possible placement.\n  const internalPosition = bestPositionOutsideViewport?.internalPosition || 'right-top';\n  // Get default rect for that placement.\n  const defaultOffset = RECTANGLE_CALCULATIONS[internalPosition]({ body, trigger, arrow });\n  // Get largest possible rect that fits into viewport or container.\n  const optimisedOffset = fitIntoContainer(\n    defaultOffset,\n    renderWithPortal ? viewport : getLargestRect(container, viewport)\n  );\n  // If largest possible rect is smaller than original - set body scroll.\n  const scrollable = optimisedOffset.height < defaultOffset.height;\n\n  return { internalPosition, boundingOffset: optimisedOffset, scrollable };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}