{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { getBaseProps } from '../internal/base-component';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport Dropdown from '../internal/components/dropdown';\nimport ItemsList from './items-list';\nimport { useButtonDropdown } from './utils/use-button-dropdown';\nimport OptionsList from '../internal/components/options-list';\nimport { InternalButton } from '../button/internal';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport InternalBox from '../box/internal';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\nimport { isDevelopment } from '../internal/is-development';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode/index.js';\nimport { useFunnel } from '../internal/analytics/hooks/use-funnel.js';\nconst InternalButtonDropdown = React.forwardRef((_a, ref) => {\n  var _b;\n  var {\n      items,\n      variant = 'normal',\n      loading = false,\n      loadingText,\n      disabled = false,\n      expandableGroups = false,\n      children,\n      onItemClick,\n      onItemFollow,\n      customTriggerBuilder,\n      expandToViewport,\n      ariaLabel,\n      title,\n      description,\n      preferCenter,\n      mainAction,\n      __internalRootRef\n    } = _a,\n    props = __rest(_a, [\"items\", \"variant\", \"loading\", \"loadingText\", \"disabled\", \"expandableGroups\", \"children\", \"onItemClick\", \"onItemFollow\", \"customTriggerBuilder\", \"expandToViewport\", \"ariaLabel\", \"title\", \"description\", \"preferCenter\", \"mainAction\", \"__internalRootRef\"]);\n  const isInRestrictedView = useMobile();\n  const dropdownId = useUniqueId('dropdown');\n  for (const item of items) {\n    checkSafeUrl('ButtonDropdown', item.href);\n  }\n  if (mainAction) {\n    checkSafeUrl('ButtonDropdown', mainAction.href);\n  }\n  if (isDevelopment) {\n    if (mainAction && variant !== 'primary') {\n      warnOnce('ButtonDropdown', 'Main action is only supported for \"primary\" component variant.');\n    }\n  }\n  const isMainAction = mainAction && variant === 'primary';\n  const isVisualRefresh = useVisualRefresh();\n  const {\n    isOpen,\n    targetItem,\n    isHighlighted,\n    isKeyboardHighlight,\n    isExpanded,\n    highlightItem,\n    onKeyDown,\n    onKeyUp,\n    onItemActivate,\n    onGroupToggle,\n    toggleDropdown,\n    closeDropdown,\n    setIsUsingMouse\n  } = useButtonDropdown({\n    items,\n    onItemClick,\n    onItemFollow,\n    onReturnFocus: () => {\n      var _a;\n      return (_a = triggerRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    },\n    expandToViewport,\n    hasExpandableGroups: expandableGroups,\n    isInRestrictedView\n  });\n  const handleMouseEvent = () => {\n    setIsUsingMouse(true);\n  };\n  const baseProps = getBaseProps(props);\n  const mainActionRef = useRef(null);\n  const triggerRef = useRef(null);\n  useForwardFocus(ref, isMainAction ? mainActionRef : triggerRef);\n  const clickHandler = () => {\n    if (!loading && !disabled) {\n      // Prevent moving highlight on mobiles to avoid disabled state reason popup if defined.\n      toggleDropdown({\n        moveHighlightOnOpen: !isInRestrictedView\n      });\n    }\n  };\n  const canBeOpened = !loading && !disabled;\n  const triggerVariant = variant === 'navigation' ? undefined : variant === 'inline-icon' ? 'inline-icon' : variant;\n  const iconProps = variant === 'icon' || variant === 'inline-icon' ? {\n    iconName: 'ellipsis'\n  } : {\n    iconName: 'caret-down-filled',\n    iconAlign: 'right',\n    __iconClass: canBeOpened && isOpen ? styles['rotate-up'] : styles['rotate-down']\n  };\n  const baseTriggerProps = Object.assign(Object.assign({\n    className: styles['trigger-button']\n  }, iconProps), {\n    variant: triggerVariant,\n    loading,\n    loadingText,\n    disabled,\n    onClick: event => {\n      event.preventDefault();\n      clickHandler();\n    },\n    ariaLabel,\n    ariaExpanded: canBeOpened && isOpen,\n    formAction: 'none',\n    __nativeAttributes: {\n      'aria-haspopup': true\n    }\n  });\n  let trigger = null;\n  if (customTriggerBuilder) {\n    trigger = React.createElement(\"div\", {\n      className: styles['dropdown-trigger']\n    }, customTriggerBuilder(clickHandler, triggerRef, disabled, isOpen, ariaLabel));\n  } else if (isMainAction) {\n    const {\n        text,\n        iconName,\n        iconAlt,\n        iconSvg,\n        iconUrl,\n        external,\n        externalIconAriaLabel\n      } = mainAction,\n      mainActionProps = __rest(mainAction, [\"text\", \"iconName\", \"iconAlt\", \"iconSvg\", \"iconUrl\", \"external\", \"externalIconAriaLabel\"]);\n    const mainActionIconProps = external ? {\n      iconName: 'external',\n      iconAlign: 'right'\n    } : {\n      iconName,\n      iconAlt,\n      iconSvg,\n      iconUrl\n    };\n    const mainActionAriaLabel = externalIconAriaLabel ? `${(_b = mainAction.ariaLabel) !== null && _b !== void 0 ? _b : mainAction.text} ${mainAction.externalIconAriaLabel}` : undefined;\n    trigger = React.createElement(\"div\", {\n      role: \"group\",\n      \"aria-label\": ariaLabel,\n      className: styles['split-trigger-wrapper']\n    }, React.createElement(\"div\", {\n      className: clsx(styles['trigger-item'], styles['split-trigger']),\n      // Close dropdown upon main action click unless event is cancelled.\n      onClick: closeDropdown,\n      // Prevent keyboard events from propagation to the button dropdown handler.\n      onKeyDown: e => e.stopPropagation(),\n      onKeyUp: e => e.stopPropagation()\n    }, React.createElement(InternalButton, Object.assign({\n      ref: mainActionRef\n    }, mainActionProps, mainActionIconProps, {\n      className: styles['trigger-button'],\n      variant: \"primary\",\n      ariaLabel: mainActionAriaLabel,\n      formAction: \"none\"\n    }), text)), React.createElement(\"div\", {\n      className: clsx(styles['trigger-item'], styles['dropdown-trigger'], isVisualRefresh && styles['visual-refresh'])\n    }, React.createElement(InternalButton, Object.assign({\n      ref: triggerRef\n    }, baseTriggerProps))));\n  } else {\n    trigger = React.createElement(\"div\", {\n      className: styles['dropdown-trigger']\n    }, React.createElement(InternalButton, Object.assign({\n      ref: triggerRef\n    }, baseTriggerProps), children));\n  }\n  const hasHeader = title || description;\n  const headerId = useUniqueId('awsui-button-dropdown__header');\n  const {\n    loadingButtonCount\n  } = useFunnel();\n  useEffect(() => {\n    if (loading) {\n      loadingButtonCount.current++;\n      return () => {\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        loadingButtonCount.current--;\n      };\n    }\n  }, [loading, loadingButtonCount]);\n  return React.createElement(\"div\", Object.assign({}, baseProps, {\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp,\n    onMouseDown: handleMouseEvent,\n    onMouseMove: handleMouseEvent,\n    className: clsx(styles['button-dropdown'], styles[`variant-${variant}`], baseProps.className),\n    \"aria-owns\": expandToViewport && isOpen ? dropdownId : undefined,\n    ref: __internalRootRef\n  }), React.createElement(Dropdown, {\n    open: canBeOpened && isOpen,\n    stretchWidth: false,\n    stretchTriggerHeight: variant === 'navigation',\n    expandToViewport: expandToViewport,\n    preferCenter: preferCenter,\n    onDropdownClose: () => toggleDropdown(),\n    trigger: trigger,\n    dropdownId: dropdownId\n  }, hasHeader && React.createElement(\"div\", {\n    className: styles.header,\n    id: headerId\n  }, title && React.createElement(\"div\", {\n    className: styles.title\n  }, React.createElement(InternalBox, {\n    fontSize: \"heading-s\",\n    fontWeight: \"bold\",\n    color: \"inherit\",\n    tagOverride: \"h2\",\n    margin: {\n      vertical: 'n',\n      horizontal: 'n'\n    }\n  }, title)), description && React.createElement(InternalBox, {\n    fontSize: \"body-s\"\n  }, React.createElement(\"span\", {\n    className: styles.description\n  }, description))), React.createElement(OptionsList, {\n    open: canBeOpened && isOpen,\n    position: \"static\",\n    role: \"menu\",\n    decreaseTopMargin: true,\n    ariaLabelledby: hasHeader ? headerId : undefined,\n    statusType: \"finished\"\n  }, React.createElement(ItemsList, {\n    items: items,\n    onItemActivate: onItemActivate,\n    onGroupToggle: onGroupToggle,\n    hasExpandableGroups: expandableGroups,\n    targetItem: targetItem,\n    isHighlighted: isHighlighted,\n    isKeyboardHighlight: isKeyboardHighlight,\n    isExpanded: isExpanded,\n    highlightItem: highlightItem,\n    expandToViewport: expandToViewport,\n    variant: variant\n  }))));\n});\nexport default InternalButtonDropdown;","map":{"version":3,"names":["React","useEffect","useRef","clsx","styles","getBaseProps","useUniqueId","Dropdown","ItemsList","useButtonDropdown","OptionsList","InternalButton","useMobile","useForwardFocus","InternalBox","checkSafeUrl","isDevelopment","warnOnce","useVisualRefresh","useFunnel","InternalButtonDropdown","forwardRef","_a","ref","items","variant","loading","loadingText","disabled","expandableGroups","children","onItemClick","onItemFollow","customTriggerBuilder","expandToViewport","ariaLabel","title","description","preferCenter","mainAction","__internalRootRef","props","__rest","isInRestrictedView","dropdownId","item","href","isMainAction","isVisualRefresh","isOpen","targetItem","isHighlighted","isKeyboardHighlight","isExpanded","highlightItem","onKeyDown","onKeyUp","onItemActivate","onGroupToggle","toggleDropdown","closeDropdown","setIsUsingMouse","onReturnFocus","triggerRef","current","focus","hasExpandableGroups","handleMouseEvent","baseProps","mainActionRef","clickHandler","moveHighlightOnOpen","canBeOpened","triggerVariant","undefined","iconProps","iconName","iconAlign","__iconClass","baseTriggerProps","Object","assign","className","onClick","event","preventDefault","ariaExpanded","formAction","__nativeAttributes","trigger","createElement","text","iconAlt","iconSvg","iconUrl","external","externalIconAriaLabel","mainActionProps","mainActionIconProps","mainActionAriaLabel","_b","role","e","stopPropagation","hasHeader","headerId","loadingButtonCount","onMouseDown","onMouseMove","open","stretchWidth","stretchTriggerHeight","onDropdownClose","header","id","fontSize","fontWeight","color","tagOverride","margin","vertical","horizontal","position","decreaseTopMargin","ariaLabelledby","statusType"],"sources":["/Users/nelaurar/Desktop/proj /my-app/node_modules/@cloudscape-design/components/button-dropdown/lib/default/button-dropdown/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { ButtonDropdownProps, InternalButtonDropdownProps } from './interfaces';\nimport { getBaseProps } from '../internal/base-component';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport Dropdown from '../internal/components/dropdown';\nimport ItemsList from './items-list';\nimport { useButtonDropdown } from './utils/use-button-dropdown';\nimport OptionsList from '../internal/components/options-list';\nimport { InternalButton, InternalButtonProps } from '../button/internal';\nimport { ButtonProps } from '../button/interfaces';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport InternalBox from '../box/internal';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\nimport { isDevelopment } from '../internal/is-development';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode/index.js';\nimport { useFunnel } from '../internal/analytics/hooks/use-funnel.js';\n\nconst InternalButtonDropdown = React.forwardRef(\n  (\n    {\n      items,\n      variant = 'normal',\n      loading = false,\n      loadingText,\n      disabled = false,\n      expandableGroups = false,\n      children,\n      onItemClick,\n      onItemFollow,\n      customTriggerBuilder,\n      expandToViewport,\n      ariaLabel,\n      title,\n      description,\n      preferCenter,\n      mainAction,\n      __internalRootRef,\n      ...props\n    }: InternalButtonDropdownProps,\n    ref: React.Ref<ButtonDropdownProps.Ref>\n  ) => {\n    const isInRestrictedView = useMobile();\n    const dropdownId = useUniqueId('dropdown');\n    for (const item of items) {\n      checkSafeUrl('ButtonDropdown', item.href);\n    }\n    if (mainAction) {\n      checkSafeUrl('ButtonDropdown', mainAction.href);\n    }\n\n    if (isDevelopment) {\n      if (mainAction && variant !== 'primary') {\n        warnOnce('ButtonDropdown', 'Main action is only supported for \"primary\" component variant.');\n      }\n    }\n    const isMainAction = mainAction && variant === 'primary';\n    const isVisualRefresh = useVisualRefresh();\n\n    const {\n      isOpen,\n      targetItem,\n      isHighlighted,\n      isKeyboardHighlight,\n      isExpanded,\n      highlightItem,\n      onKeyDown,\n      onKeyUp,\n      onItemActivate,\n      onGroupToggle,\n      toggleDropdown,\n      closeDropdown,\n      setIsUsingMouse,\n    } = useButtonDropdown({\n      items,\n      onItemClick,\n      onItemFollow,\n      onReturnFocus: () => triggerRef.current?.focus(),\n      expandToViewport,\n      hasExpandableGroups: expandableGroups,\n      isInRestrictedView,\n    });\n\n    const handleMouseEvent = () => {\n      setIsUsingMouse(true);\n    };\n\n    const baseProps = getBaseProps(props);\n\n    const mainActionRef = useRef<HTMLElement>(null);\n    const triggerRef = useRef<HTMLElement>(null);\n\n    useForwardFocus(ref, isMainAction ? mainActionRef : triggerRef);\n\n    const clickHandler = () => {\n      if (!loading && !disabled) {\n        // Prevent moving highlight on mobiles to avoid disabled state reason popup if defined.\n        toggleDropdown({ moveHighlightOnOpen: !isInRestrictedView });\n      }\n    };\n\n    const canBeOpened = !loading && !disabled;\n\n    const triggerVariant = variant === 'navigation' ? undefined : variant === 'inline-icon' ? 'inline-icon' : variant;\n    const iconProps: Partial<ButtonProps & { __iconClass?: string }> =\n      variant === 'icon' || variant === 'inline-icon'\n        ? {\n            iconName: 'ellipsis',\n          }\n        : {\n            iconName: 'caret-down-filled',\n            iconAlign: 'right',\n            __iconClass: canBeOpened && isOpen ? styles['rotate-up'] : styles['rotate-down'],\n          };\n\n    const baseTriggerProps: InternalButtonProps = {\n      className: styles['trigger-button'],\n      ...iconProps,\n      variant: triggerVariant,\n      loading,\n      loadingText,\n      disabled,\n      onClick: (event: Event) => {\n        event.preventDefault();\n        clickHandler();\n      },\n      ariaLabel,\n      ariaExpanded: canBeOpened && isOpen,\n      formAction: 'none',\n      __nativeAttributes: {\n        'aria-haspopup': true,\n      },\n    };\n\n    let trigger: React.ReactNode = null;\n    if (customTriggerBuilder) {\n      trigger = (\n        <div className={styles['dropdown-trigger']}>\n          {customTriggerBuilder(clickHandler, triggerRef, disabled, isOpen, ariaLabel)}\n        </div>\n      );\n    } else if (isMainAction) {\n      const { text, iconName, iconAlt, iconSvg, iconUrl, external, externalIconAriaLabel, ...mainActionProps } =\n        mainAction;\n      const mainActionIconProps = external\n        ? ({ iconName: 'external', iconAlign: 'right' } as const)\n        : ({ iconName, iconAlt, iconSvg, iconUrl } as const);\n      const mainActionAriaLabel = externalIconAriaLabel\n        ? `${mainAction.ariaLabel ?? mainAction.text} ${mainAction.externalIconAriaLabel}`\n        : undefined;\n\n      trigger = (\n        <div role=\"group\" aria-label={ariaLabel} className={styles['split-trigger-wrapper']}>\n          <div\n            className={clsx(styles['trigger-item'], styles['split-trigger'])}\n            // Close dropdown upon main action click unless event is cancelled.\n            onClick={closeDropdown}\n            // Prevent keyboard events from propagation to the button dropdown handler.\n            onKeyDown={e => e.stopPropagation()}\n            onKeyUp={e => e.stopPropagation()}\n          >\n            <InternalButton\n              ref={mainActionRef}\n              {...mainActionProps}\n              {...mainActionIconProps}\n              className={styles['trigger-button']}\n              variant=\"primary\"\n              ariaLabel={mainActionAriaLabel}\n              formAction=\"none\"\n            >\n              {text}\n            </InternalButton>\n          </div>\n          <div\n            className={clsx(\n              styles['trigger-item'],\n              styles['dropdown-trigger'],\n              isVisualRefresh && styles['visual-refresh']\n            )}\n          >\n            <InternalButton ref={triggerRef} {...baseTriggerProps} />\n          </div>\n        </div>\n      );\n    } else {\n      trigger = (\n        <div className={styles['dropdown-trigger']}>\n          <InternalButton ref={triggerRef} {...baseTriggerProps}>\n            {children}\n          </InternalButton>\n        </div>\n      );\n    }\n\n    const hasHeader = title || description;\n    const headerId = useUniqueId('awsui-button-dropdown__header');\n\n    const { loadingButtonCount } = useFunnel();\n    useEffect(() => {\n      if (loading) {\n        loadingButtonCount.current++;\n        return () => {\n          // eslint-disable-next-line react-hooks/exhaustive-deps\n          loadingButtonCount.current--;\n        };\n      }\n    }, [loading, loadingButtonCount]);\n\n    return (\n      <div\n        {...baseProps}\n        onKeyDown={onKeyDown}\n        onKeyUp={onKeyUp}\n        onMouseDown={handleMouseEvent}\n        onMouseMove={handleMouseEvent}\n        className={clsx(styles['button-dropdown'], styles[`variant-${variant}`], baseProps.className)}\n        aria-owns={expandToViewport && isOpen ? dropdownId : undefined}\n        ref={__internalRootRef}\n      >\n        <Dropdown\n          open={canBeOpened && isOpen}\n          stretchWidth={false}\n          stretchTriggerHeight={variant === 'navigation'}\n          expandToViewport={expandToViewport}\n          preferCenter={preferCenter}\n          onDropdownClose={() => toggleDropdown()}\n          trigger={trigger}\n          dropdownId={dropdownId}\n        >\n          {hasHeader && (\n            <div className={styles.header} id={headerId}>\n              {title && (\n                <div className={styles.title}>\n                  <InternalBox\n                    fontSize=\"heading-s\"\n                    fontWeight=\"bold\"\n                    color=\"inherit\"\n                    tagOverride=\"h2\"\n                    margin={{ vertical: 'n', horizontal: 'n' }}\n                  >\n                    {title}\n                  </InternalBox>\n                </div>\n              )}\n              {description && (\n                <InternalBox fontSize=\"body-s\">\n                  <span className={styles.description}>{description}</span>\n                </InternalBox>\n              )}\n            </div>\n          )}\n          <OptionsList\n            open={canBeOpened && isOpen}\n            position=\"static\"\n            role=\"menu\"\n            decreaseTopMargin={true}\n            ariaLabelledby={hasHeader ? headerId : undefined}\n            statusType=\"finished\"\n          >\n            <ItemsList\n              items={items}\n              onItemActivate={onItemActivate}\n              onGroupToggle={onGroupToggle}\n              hasExpandableGroups={expandableGroups}\n              targetItem={targetItem}\n              isHighlighted={isHighlighted}\n              isKeyboardHighlight={isKeyboardHighlight}\n              isExpanded={isExpanded}\n              highlightItem={highlightItem}\n              expandToViewport={expandToViewport}\n              variant={variant}\n            />\n          </OptionsList>\n        </Dropdown>\n      </div>\n    );\n  }\n);\n\nexport default InternalButtonDropdown;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}